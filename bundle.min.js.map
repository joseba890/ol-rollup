{"version":3,"file":"bundle.min.js","sources":["node_modules/ol/events/Event.js","node_modules/ol/ObjectEventType.js","node_modules/ol/Disposable.js","node_modules/ol/array.js","node_modules/ol/functions.js","node_modules/ol/obj.js","node_modules/ol/events/Target.js","node_modules/ol/events/EventType.js","node_modules/ol/events.js","node_modules/ol/Observable.js","node_modules/ol/util.js","node_modules/ol/Object.js","node_modules/ol/asserts.js","node_modules/ol/Feature.js","node_modules/ol/transform.js","node_modules/ol/extent/Relationship.js","node_modules/ol/extent.js","node_modules/ol/proj/Units.js","node_modules/ol/proj/Projection.js","node_modules/ol/proj/epsg3857.js","node_modules/ol/proj/epsg4326.js","node_modules/ol/proj/projections.js","node_modules/ol/proj/transforms.js","node_modules/ol/math.js","node_modules/ol/string.js","node_modules/ol/coordinate.js","node_modules/ol/sphere.js","node_modules/ol/console.js","node_modules/ol/proj.js","node_modules/ol/geom/flat/transform.js","node_modules/ol/geom/Geometry.js","node_modules/ol/geom/SimpleGeometry.js","node_modules/ol/geom/flat/deflate.js","node_modules/ol/geom/GeometryCollection.js","node_modules/ol/geom/flat/closest.js","node_modules/ol/geom/flat/simplify.js","node_modules/ol/geom/flat/inflate.js","node_modules/ol/geom/flat/area.js","node_modules/ol/geom/LinearRing.js","node_modules/ol/geom/flat/segments.js","node_modules/ol/geom/flat/interpolate.js","node_modules/ol/geom/flat/contains.js","node_modules/ol/geom/flat/intersectsextent.js","node_modules/ol/geom/flat/length.js","node_modules/ol/geom/LineString.js","node_modules/ol/geom/MultiLineString.js","node_modules/ol/geom/Point.js","node_modules/ol/geom/MultiPoint.js","node_modules/ol/geom/flat/interiorpoint.js","node_modules/ol/geom/flat/reverse.js","node_modules/ol/geom/flat/orient.js","node_modules/ol/geom/Polygon.js","node_modules/ol/geom/flat/center.js","node_modules/ol/geom/MultiPolygon.js","node_modules/ol/render/Feature.js","node_modules/ol/format/Feature.js","node_modules/ol/format/JSONFeature.js","node_modules/ol/format/GeoJSON.js","node_modules/ol/CollectionEventType.js","node_modules/ol/Collection.js","node_modules/ol/layer/Property.js","node_modules/ol/layer/Base.js","node_modules/ol/render/EventType.js","node_modules/ol/ViewProperty.js","node_modules/ol/tilegrid/common.js","node_modules/ol/centerconstraint.js","node_modules/ol/resolutionconstraint.js","node_modules/ol/rotationconstraint.js","node_modules/ol/easing.js","node_modules/ol/View.js","node_modules/ol/ViewHint.js","node_modules/ol/layer/Layer.js","node_modules/rbush/rbush.min.js","node_modules/ol/ImageState.js","node_modules/ol/size.js","node_modules/ol/style/Image.js","node_modules/color-space/rgb.js","node_modules/color-space/xyz.js","node_modules/color-space/luv.js","node_modules/color-space/lchuv.js","node_modules/color-name/index.js","node_modules/color-parse/index.js","node_modules/color-space/hsl.js","node_modules/ol/color.js","node_modules/color-rgba/index.js","node_modules/ol/has.js","node_modules/ol/dom.js","node_modules/ol/style/IconImageCache.js","node_modules/ol/style/IconImage.js","node_modules/ol/Image.js","node_modules/ol/colorlike.js","node_modules/ol/css.js","node_modules/ol/render/canvas.js","node_modules/ol/style/RegularShape.js","node_modules/ol/style/Circle.js","node_modules/ol/style/Fill.js","node_modules/ol/style/Stroke.js","node_modules/ol/style/Style.js","node_modules/ol/style/Icon.js","node_modules/ol/style/Text.js","node_modules/ol/expr/expression.js","node_modules/ol/expr/cpu.js","node_modules/ol/render/canvas/style.js","node_modules/ol/layer/BaseVector.js","node_modules/ol/renderer/Map.js","node_modules/ol/render/Event.js","node_modules/ol/renderer/Composite.js","node_modules/ol/layer/Group.js","node_modules/ol/MapEvent.js","node_modules/ol/MapBrowserEvent.js","node_modules/ol/MapBrowserEventType.js","node_modules/ol/pointer/EventType.js","node_modules/ol/MapBrowserEventHandler.js","node_modules/ol/MapEventType.js","node_modules/ol/MapProperty.js","node_modules/ol/structs/PriorityQueue.js","node_modules/ol/TileQueue.js","node_modules/ol/TileState.js","node_modules/ol/control/Control.js","node_modules/ol/control/Attribution.js","node_modules/ol/control/Rotate.js","node_modules/ol/control/Zoom.js","node_modules/ol/interaction/Property.js","node_modules/ol/interaction/Interaction.js","node_modules/ol/interaction/DoubleClickZoom.js","node_modules/ol/interaction/Pointer.js","node_modules/ol/events/condition.js","node_modules/ol/interaction/DragPan.js","node_modules/ol/interaction/DragRotate.js","node_modules/ol/render/Box.js","node_modules/ol/interaction/DragBox.js","node_modules/ol/interaction/DragZoom.js","node_modules/ol/events/Key.js","node_modules/ol/interaction/KeyboardPan.js","node_modules/ol/interaction/KeyboardZoom.js","node_modules/ol/Kinetic.js","node_modules/ol/interaction/MouseWheelZoom.js","node_modules/ol/interaction/PinchRotate.js","node_modules/ol/interaction/PinchZoom.js","node_modules/ol/Map.js","node_modules/ol/layer/TileProperty.js","node_modules/ol/layer/BaseTile.js","node_modules/ol/renderer/Layer.js","node_modules/ol/render/canvas/ZIndexContext.js","node_modules/ol/renderer/canvas/Layer.js","node_modules/ol/reproj.js","node_modules/ol/Tile.js","node_modules/ol/ImageTile.js","node_modules/ol/reproj/Triangulation.js","node_modules/ol/reproj/Tile.js","node_modules/ol/reproj/common.js","node_modules/ol/TileRange.js","node_modules/ol/renderer/canvas/TileLayer.js","node_modules/ol/structs/LRUCache.js","node_modules/ol/tilecoord.js","node_modules/ol/TileCache.js","node_modules/ol/source/Source.js","node_modules/ol/tilegrid/TileGrid.js","node_modules/ol/tilegrid.js","node_modules/ol/source/Tile.js","node_modules/ol/tileurlfunction.js","node_modules/ol/source/UrlTile.js","node_modules/ol/source/TileEventType.js","node_modules/ol/source/TileImage.js","node_modules/ol/source/XYZ.js","node_modules/ol/control/MousePosition.js","node_modules/ol/Overlay.js","node_modules/ol/control/ZoomSlider.js","node_modules/ol/render/canvas/Instruction.js","node_modules/ol/render/VectorContext.js","node_modules/ol/render/canvas/Builder.js","node_modules/ol/render/canvas/PolygonBuilder.js","node_modules/ol/geom/flat/linechunk.js","node_modules/ol/geom/flat/straightchunk.js","node_modules/ol/render/canvas/TextBuilder.js","node_modules/ol/render/canvas/BuilderGroup.js","node_modules/ol/render/canvas/ImageBuilder.js","node_modules/ol/render/canvas/LineStringBuilder.js","node_modules/ol/geom/flat/textpath.js","node_modules/ol/render/canvas/Executor.js","node_modules/ol/render/canvas/ExecutorGroup.js","node_modules/ol/render/canvas/Immediate.js","node_modules/ol/render/canvas/hitdetect.js","node_modules/ol/renderer/vector.js","node_modules/ol/renderer/canvas/VectorLayer.js","node_modules/ol/structs/RBush.js","node_modules/ol/source/VectorEventType.js","node_modules/ol/loadingstrategy.js","node_modules/ol/featureloader.js","node_modules/ol/source/Vector.js","main.js","node_modules/ol/layer/Vector.js","node_modules/ol/control/defaults.js","node_modules/ol/interaction/defaults.js","node_modules/ol/layer/Tile.js","node_modules/ol/source/OSM.js"],"sourcesContent":["/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  let called = false;\n\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>} */\n  let lastArgs;\n\n  let lastThis;\n\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!called || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      called = true;\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport Event from './Event.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  if (once) {\n    const originalListener = listener;\n    listener = function () {\n      target.removeEventListener(type, listener);\n      originalListener.apply(this, arguments);\n    };\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '9.2.4';\n","/**\n * @module ol/Object\n */\nimport Event from './events/Event.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport {getUid} from './util.js';\nimport {isEmpty} from './obj.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport EventType from './events/EventType.js';\nimport {assert} from './asserts.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e6, 1e6, 1e6, 1e6, 2, 2];\n\n/**\n * A rounded string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString =\n    'matrix(' +\n    mat\n      .map(\n        (value, i) =>\n          Math.round(value * matrixPrecision[i]) / matrixPrecision[i],\n      )\n      .join(', ') +\n    ')';\n  return transformString;\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {function(number, import(\"../coordinate.js\").Coordinate):number} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * Projection definition class. One of these is created for each projection\n * supported in the application and stored in the {@link module:ol/proj} namespace.\n * You can use these in applications, but this is not required, as API params\n * and options use {@link module:ol/proj~ProjectionLike} which means the simple string\n * code will suffice.\n *\n * You can use {@link module:ol/proj.get} to retrieve the object for a particular\n * projection.\n *\n * The library includes definitions for `EPSG:4326` and `EPSG:3857`, together\n * with the following aliases:\n * * `EPSG:4326`: CRS:84, urn:ogc:def:crs:EPSG:6.6:4326,\n *     urn:ogc:def:crs:OGC:1.3:CRS84, urn:ogc:def:crs:OGC:2:84,\n *     http://www.opengis.net/gml/srs/epsg.xml#4326,\n *     urn:x-ogc:def:crs:EPSG:4326\n * * `EPSG:3857`: EPSG:102100, EPSG:102113, EPSG:900913,\n *     urn:ogc:def:crs:EPSG:6.18:3:3857,\n *     http://www.opengis.net/gml/srs/epsg.xml#3857\n *\n * If you use [proj4js](https://github.com/proj4js/proj4js), aliases can\n * be added using `proj4.defs()`. After all required projection definitions are\n * added, call the {@link module:ol/proj/proj4.register} function.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {function(number, import(\"../coordinate.js\").Coordinate):number|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {function(number, import(\"../coordinate.js\").Coordinate):number|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += dimension) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|undefined} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  let transform;\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    transform = transforms[sourceCode][destinationCode];\n  }\n  return transform;\n}\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport Projection from './proj/Projection.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {getDistance} from './sphere.js';\nimport {warn} from './console.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @typedef {function(Array<number>, Array<number>=, number=): Array<number>} TransformFunction\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable = true] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  return typeof projectionLike === 'string'\n    ? getProj(/** @type {string} */ (projectionLike))\n    : /** @type {Projection} */ (projectionLike) || null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (toEPSG4326 === identityTransform && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimension.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += dimension) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = dimension; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} sourceProjection Source Projection object.\n * @param {Projection} destinationProjection Destination Projection\n *     object.\n * @return {TransformFunction} Transform function.\n */\nexport function getTransformFromProjections(\n  sourceProjection,\n  destinationProjection,\n) {\n  const sourceCode = sourceProjection.getCode();\n  const destinationCode = destinationProjection.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (!transformFunc) {\n    transformFunc = identityTransform;\n  }\n  return transformFunc;\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original).\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {abstract} from '../util.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const coord = this.getClosestPoint([x, y]);\n    return coord[0] === x && coord[1] === y;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            return getTransform(sourceProj, destination)(\n              inCoordinates,\n              outCoordinates,\n              stride,\n            );\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport Geometry from './Geometry.js';\nimport {abstract} from '../util.js';\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(this.flatCoordinates, this.flatCoordinates, this.stride);\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport Geometry from './Geometry.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    twiceArea += y1 * x2 - x1 * y2;\n    x1 = x2;\n    y1 = y2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  containsExtent,\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {forEach as forEachSegment} from './segments.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const coordinatesExtent = extendFlatCoordinates(\n    createEmpty(),\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n  );\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (containsExtent(extent, coordinatesExtent)) {\n    return true;\n  }\n  if (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) {\n    return true;\n  }\n  if (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3]) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/Point\n */\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {deflateCoordinate} from './flat/deflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {squaredDistance as squaredDx} from '../math.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {modulo} from '../math.js';\nimport {quantizeArray} from './flat/simplify.js';\nimport {offset as sphereOffset} from '../sphere.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {extend} from '../array.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {extend} from '../array.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {get as getProjection} from '../proj.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {memoizeOne} from '../functions.js';\nimport {transform2D} from '../geom/flat/transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName='geometry'] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {abstract} from '../util.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {Feature|RenderFeature} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {T}\n     */\n    this.featureClass = /** @type {T} */ (Feature);\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../Feature.js\").FeatureLike|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<import('../Feature.js').FeatureLike|FeatureClassToFeature<T>>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout, object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport FeatureFormat from './Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof import('../Feature.js').default]\n * @extends {FeatureFormat<T>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import('./Feature.js').FeatureClassToFeature<T>} Feature.\n   * @api\n   */\n  readFeature(source, options) {\n    return /** @type {import('./Feature.js').FeatureClassToFeature<T>} */ (\n      this.readFeatureFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<import('./Feature.js').FeatureClassToFeature<T>>} Features.\n   * @api\n   */\n  readFeatures(source, options) {\n    return /** @type {Array<import('./Feature.js').FeatureClassToFeature<T>>} */ (\n      this.readFeaturesFromObject(\n        getObject(source),\n        this.getReadOptions(source, options),\n      )\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../Feature.js\").default|import(\"../render/Feature.js\").default|Array<import(\"../render/Feature.js\").default>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<import(\"../Feature.js\").default|import(\"../render/Feature.js\").default>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport JSONFeature from './JSONFeature.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {get as getProjection} from '../proj.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureClass} FeatureClassToFeature\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {FeatureClassToFeature} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureClass} [T=typeof Feature]\n * @extends {JSONFeature<T>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<T>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Feature|RenderFeature|Array<RenderFeature>}.default} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return createRenderFeature(\n        {\n          geometry,\n          id: geoJSONFeature['id'],\n          properties: geoJSONFeature['properties'],\n        },\n        options,\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature|RenderFeature>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    /** @type {Array<Feature|RenderFeature|Array<RenderFeature>>} */\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return features.flat();\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport BaseObject from './Object.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport LayerProperty from './Property.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {clamp} from './math.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {linearFindNearest} from './array.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {VOID} from './functions.js';\nimport {\n  add as addCoordinate,\n  equals as coordinatesEqual,\n  equals,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {assert} from './asserts.js';\nimport {none as centerNone, createExtent} from './centerconstraint.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {linearFindNearest} from './array.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_) {\n      if (this.resolutions_.length <= 1) {\n        return 0;\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction=0] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/layer/Layer\n */\nimport BaseLayer from './Base.js';\nimport EventType from '../events/EventType.js';\nimport LayerProperty from './Property.js';\nimport RenderEventType from '../render/EventType.js';\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport {intersects} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number | undefined} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    let getAttributions;\n    const source = this.getSource();\n    if (source) {\n      getAttributions = source.getAttributions();\n    }\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        function (evt) {\n          const renderEvent =\n            /** @type {import(\"../render/Event.js\").default} */ (evt);\n          const layerStatesArray = renderEvent.frameState.layerStatesArray;\n          const layerState = this.getLayerState(false);\n          assert(\n            !layerStatesArray.some(function (arrayLayerState) {\n              return arrayLayerState.layer === layerState.layer;\n            }),\n            'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n          );\n          layerStatesArray.push(layerState);\n        },\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","!function(t,i){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=i():\"function\"==typeof define&&define.amd?define(i):(t=t||self).RBush=i()}(this,function(){\"use strict\";function t(t,r,e,a,h){!function t(n,r,e,a,h){for(;a>e;){if(a-e>600){var o=a-e+1,s=r-e+1,l=Math.log(o),f=.5*Math.exp(2*l/3),u=.5*Math.sqrt(l*f*(o-f)/o)*(s-o/2<0?-1:1),m=Math.max(e,Math.floor(r-s*f/o+u)),c=Math.min(a,Math.floor(r+(o-s)*f/o+u));t(n,r,m,c,h)}var p=n[r],d=e,x=a;for(i(n,e,r),h(n[a],p)>0&&i(n,e,a);d<x;){for(i(n,d,x),d++,x--;h(n[d],p)<0;)d++;for(;h(n[x],p)>0;)x--}0===h(n[e],p)?i(n,e,x):i(n,++x,a),x<=r&&(e=x+1),r<=x&&(a=x-1)}}(t,r,e||0,a||t.length-1,h||n)}function i(t,i,n){var r=t[i];t[i]=t[n],t[n]=r}function n(t,i){return t<i?-1:t>i?1:0}var r=function(t){void 0===t&&(t=9),this._maxEntries=Math.max(4,t),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),this.clear()};function e(t,i,n){if(!n)return i.indexOf(t);for(var r=0;r<i.length;r++)if(n(t,i[r]))return r;return-1}function a(t,i){h(t,0,t.children.length,i,t)}function h(t,i,n,r,e){e||(e=p(null)),e.minX=1/0,e.minY=1/0,e.maxX=-1/0,e.maxY=-1/0;for(var a=i;a<n;a++){var h=t.children[a];o(e,t.leaf?r(h):h)}return e}function o(t,i){return t.minX=Math.min(t.minX,i.minX),t.minY=Math.min(t.minY,i.minY),t.maxX=Math.max(t.maxX,i.maxX),t.maxY=Math.max(t.maxY,i.maxY),t}function s(t,i){return t.minX-i.minX}function l(t,i){return t.minY-i.minY}function f(t){return(t.maxX-t.minX)*(t.maxY-t.minY)}function u(t){return t.maxX-t.minX+(t.maxY-t.minY)}function m(t,i){return t.minX<=i.minX&&t.minY<=i.minY&&i.maxX<=t.maxX&&i.maxY<=t.maxY}function c(t,i){return i.minX<=t.maxX&&i.minY<=t.maxY&&i.maxX>=t.minX&&i.maxY>=t.minY}function p(t){return{children:t,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function d(i,n,r,e,a){for(var h=[n,r];h.length;)if(!((r=h.pop())-(n=h.pop())<=e)){var o=n+Math.ceil((r-n)/e/2)*e;t(i,o,n,r,a),h.push(n,o,o,r)}}return r.prototype.all=function(){return this._all(this.data,[])},r.prototype.search=function(t){var i=this.data,n=[];if(!c(t,i))return n;for(var r=this.toBBox,e=[];i;){for(var a=0;a<i.children.length;a++){var h=i.children[a],o=i.leaf?r(h):h;c(t,o)&&(i.leaf?n.push(h):m(t,o)?this._all(h,n):e.push(h))}i=e.pop()}return n},r.prototype.collides=function(t){var i=this.data;if(!c(t,i))return!1;for(var n=[];i;){for(var r=0;r<i.children.length;r++){var e=i.children[r],a=i.leaf?this.toBBox(e):e;if(c(t,a)){if(i.leaf||m(t,a))return!0;n.push(e)}}i=n.pop()}return!1},r.prototype.load=function(t){if(!t||!t.length)return this;if(t.length<this._minEntries){for(var i=0;i<t.length;i++)this.insert(t[i]);return this}var n=this._build(t.slice(),0,t.length-1,0);if(this.data.children.length)if(this.data.height===n.height)this._splitRoot(this.data,n);else{if(this.data.height<n.height){var r=this.data;this.data=n,n=r}this._insert(n,this.data.height-n.height-1,!0)}else this.data=n;return this},r.prototype.insert=function(t){return t&&this._insert(t,this.data.height-1),this},r.prototype.clear=function(){return this.data=p([]),this},r.prototype.remove=function(t,i){if(!t)return this;for(var n,r,a,h=this.data,o=this.toBBox(t),s=[],l=[];h||s.length;){if(h||(h=s.pop(),r=s[s.length-1],n=l.pop(),a=!0),h.leaf){var f=e(t,h.children,i);if(-1!==f)return h.children.splice(f,1),s.push(h),this._condense(s),this}a||h.leaf||!m(h,o)?r?(n++,h=r.children[n],a=!1):h=null:(s.push(h),l.push(n),n=0,r=h,h=h.children[0])}return this},r.prototype.toBBox=function(t){return t},r.prototype.compareMinX=function(t,i){return t.minX-i.minX},r.prototype.compareMinY=function(t,i){return t.minY-i.minY},r.prototype.toJSON=function(){return this.data},r.prototype.fromJSON=function(t){return this.data=t,this},r.prototype._all=function(t,i){for(var n=[];t;)t.leaf?i.push.apply(i,t.children):n.push.apply(n,t.children),t=n.pop();return i},r.prototype._build=function(t,i,n,r){var e,h=n-i+1,o=this._maxEntries;if(h<=o)return a(e=p(t.slice(i,n+1)),this.toBBox),e;r||(r=Math.ceil(Math.log(h)/Math.log(o)),o=Math.ceil(h/Math.pow(o,r-1))),(e=p([])).leaf=!1,e.height=r;var s=Math.ceil(h/o),l=s*Math.ceil(Math.sqrt(o));d(t,i,n,l,this.compareMinX);for(var f=i;f<=n;f+=l){var u=Math.min(f+l-1,n);d(t,f,u,s,this.compareMinY);for(var m=f;m<=u;m+=s){var c=Math.min(m+s-1,u);e.children.push(this._build(t,m,c,r-1))}}return a(e,this.toBBox),e},r.prototype._chooseSubtree=function(t,i,n,r){for(;r.push(i),!i.leaf&&r.length-1!==n;){for(var e=1/0,a=1/0,h=void 0,o=0;o<i.children.length;o++){var s=i.children[o],l=f(s),u=(m=t,c=s,(Math.max(c.maxX,m.maxX)-Math.min(c.minX,m.minX))*(Math.max(c.maxY,m.maxY)-Math.min(c.minY,m.minY))-l);u<a?(a=u,e=l<e?l:e,h=s):u===a&&l<e&&(e=l,h=s)}i=h||i.children[0]}var m,c;return i},r.prototype._insert=function(t,i,n){var r=n?t:this.toBBox(t),e=[],a=this._chooseSubtree(r,this.data,i,e);for(a.children.push(t),o(a,r);i>=0&&e[i].children.length>this._maxEntries;)this._split(e,i),i--;this._adjustParentBBoxes(r,e,i)},r.prototype._split=function(t,i){var n=t[i],r=n.children.length,e=this._minEntries;this._chooseSplitAxis(n,e,r);var h=this._chooseSplitIndex(n,e,r),o=p(n.children.splice(h,n.children.length-h));o.height=n.height,o.leaf=n.leaf,a(n,this.toBBox),a(o,this.toBBox),i?t[i-1].children.push(o):this._splitRoot(n,o)},r.prototype._splitRoot=function(t,i){this.data=p([t,i]),this.data.height=t.height+1,this.data.leaf=!1,a(this.data,this.toBBox)},r.prototype._chooseSplitIndex=function(t,i,n){for(var r,e,a,o,s,l,u,m=1/0,c=1/0,p=i;p<=n-i;p++){var d=h(t,0,p,this.toBBox),x=h(t,p,n,this.toBBox),v=(e=d,a=x,o=void 0,s=void 0,l=void 0,u=void 0,o=Math.max(e.minX,a.minX),s=Math.max(e.minY,a.minY),l=Math.min(e.maxX,a.maxX),u=Math.min(e.maxY,a.maxY),Math.max(0,l-o)*Math.max(0,u-s)),M=f(d)+f(x);v<m?(m=v,r=p,c=M<c?M:c):v===m&&M<c&&(c=M,r=p)}return r||n-i},r.prototype._chooseSplitAxis=function(t,i,n){var r=t.leaf?this.compareMinX:s,e=t.leaf?this.compareMinY:l;this._allDistMargin(t,i,n,r)<this._allDistMargin(t,i,n,e)&&t.children.sort(r)},r.prototype._allDistMargin=function(t,i,n,r){t.children.sort(r);for(var e=this.toBBox,a=h(t,0,i,e),s=h(t,n-i,n,e),l=u(a)+u(s),f=i;f<n-i;f++){var m=t.children[f];o(a,t.leaf?e(m):m),l+=u(a)}for(var c=n-i-1;c>=i;c--){var p=t.children[c];o(s,t.leaf?e(p):p),l+=u(s)}return l},r.prototype._adjustParentBBoxes=function(t,i,n){for(var r=n;r>=0;r--)o(i[r],t)},r.prototype._condense=function(t){for(var i=t.length-1,n=void 0;i>=0;i--)0===t[i].children.length?i>0?(n=t[i-1].children).splice(n.indexOf(t[i]),1):this.clear():a(t[i],this.toBBox)},r});\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/style/Image\n */\nimport {abstract} from '../util.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * RGB space.\n *\n * @module  color-space/rgb\n */\n\nexport default {\n\tname: 'rgb',\n\tmin: [0,0,0],\n\tmax: [255,255,255],\n\tchannel: ['red', 'green', 'blue'],\n\talias: ['RGB']\n};\n","/**\n * CIE XYZ\n *\n * @module  color-space/xyz\n */\nimport rgb from './rgb.js';\n\nvar xyz = {\n\tname: 'xyz',\n\tmin: [0,0,0],\n\tchannel: ['X','Y','Z'],\n\talias: ['XYZ', 'ciexyz', 'cie1931']\n};\n\n\n/**\n * Whitepoint reference values with observer/illuminant\n *\n * http://en.wikipedia.org/wiki/Standard_illuminant\n */\nxyz.whitepoint = {\n\t//1931 2°\n\t2: {\n\t\t//incadescent\n\t\tA:[109.85, 100, 35.585],\n\t\t// B:[],\n\t\tC: [98.074, 100, 118.232],\n\t\tD50: [96.422, 100, 82.521],\n\t\tD55: [95.682, 100, 92.149],\n\t\t//daylight\n\t\tD65: [95.045592705167, 100, 108.9057750759878],\n\t\tD75: [94.972, 100, 122.638],\n\t\t//flourescent\n\t\t// F1: [],\n\t\tF2: [99.187, 100, 67.395],\n\t\t// F3: [],\n\t\t// F4: [],\n\t\t// F5: [],\n\t\t// F6:[],\n\t\tF7: [95.044, 100, 108.755],\n\t\t// F8: [],\n\t\t// F9: [],\n\t\t// F10: [],\n\t\tF11: [100.966, 100, 64.370],\n\t\t// F12: [],\n\t\tE: [100,100,100]\n\t},\n\n\t//1964  10°\n\t10: {\n\t\t//incadescent\n\t\tA:[111.144, 100, 35.200],\n\t\tC: [97.285, 100, 116.145],\n\t\tD50: [96.720, 100, 81.427],\n\t\tD55: [95.799, 100, 90.926],\n\t\t//daylight\n\t\tD65: [94.811, 100, 107.304],\n\t\tD75: [94.416, 100, 120.641],\n\t\t//flourescent\n\t\tF2: [103.280, 100, 69.026],\n\t\tF7: [95.792, 100, 107.687],\n\t\tF11: [103.866, 100, 65.627],\n\t\tE: [100,100,100]\n\t}\n};\n\n\n/**\n * Top values are the whitepoint’s top values, default are D65\n */\nxyz.max = xyz.whitepoint[2].D65;\n\n\n/**\n * Transform xyz to rgb\n *\n * @param {Array} xyz Array of xyz values\n *\n * @return {Array} RGB values\n */\nxyz.rgb = function (_xyz, white) {\n\t//FIXME: make sure we have to divide like this. Probably we have to replace matrix as well then\n\twhite = white || xyz.whitepoint[2].E;\n\n\tvar x = _xyz[0] / white[0],\n\t\ty = _xyz[1] / white[1],\n\t\tz = _xyz[2] / white[2],\n\t\tr, g, b;\n\n\t// assume sRGB\n\t// http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n\tr = (x * 3.240969941904521) + (y * -1.537383177570093) + (z * -0.498610760293);\n\tg = (x * -0.96924363628087) + (y * 1.87596750150772) + (z * 0.041555057407175);\n\tb = (x * 0.055630079696993) + (y * -0.20397695888897) + (z * 1.056971514242878);\n\n\tr = r > 0.0031308 ? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r = (r * 12.92);\n\n\tg = g > 0.0031308 ? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g = (g * 12.92);\n\n\tb = b > 0.0031308 ? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b = (b * 12.92);\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n}\n\n\n\n/**\n * RGB to XYZ\n *\n * @param {Array} rgb RGB channels\n *\n * @return {Array} XYZ channels\n */\nrgb.xyz = function(rgb, white) {\n\tvar r = rgb[0] / 255,\n\t\t\tg = rgb[1] / 255,\n\t\t\tb = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.41239079926595) + (g * 0.35758433938387) + (b * 0.18048078840183);\n\tvar y = (r * 0.21263900587151) + (g * 0.71516867876775) + (b * 0.072192315360733);\n\tvar z = (r * 0.019330818715591) + (g * 0.11919477979462) + (b * 0.95053215224966);\n\n\twhite = white || xyz.whitepoint[2].E;\n\n\treturn [x * white[0], y * white[1], z * white[2]];\n};\n\n\n\nexport default xyz;\n","/**\n * CIE LUV (C'est la vie)\n *\n * @module color-space/luv\n */\n import xyz from './xyz.js';\n\nexport default {\n\tname: 'luv',\n\t//NOTE: luv has no rigidly defined limits\n\t//easyrgb fails to get proper coords\n\t//boronine states no rigid limits\n\t//colorMine refers this ones:\n\tmin: [0,-134,-140],\n\tmax: [100,224,122],\n\tchannel: ['lightness', 'u', 'v'],\n\talias: ['LUV', 'cieluv', 'cie1976'],\n\n\txyz: function(arg, i, o){\n\t\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\t\tl = arg[0], u = arg[1], v = arg[2];\n\n\t\tif (l === 0) return [0,0,0];\n\n\t\t//get constants\n\t\t//var e = 0.008856451679035631; //(6/29)^3\n\t\tvar k = 0.0011070564598794539; //(3/29)^3\n\n\t\t//get illuminant/observer\n\t\ti = i || 'D65';\n\t\to = o || 2;\n\n\t\txn = xyz.whitepoint[o][i][0];\n\t\tyn = xyz.whitepoint[o][i][1];\n\t\tzn = xyz.whitepoint[o][i][2];\n\n\t\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\t\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\t\t// un = 0.19783000664283;\n\t\t// vn = 0.46831999493879;\n\n\n\t\t_u = u / (13 * l) + un || 0;\n\t\t_v = v / (13 * l) + vn || 0;\n\n\t\ty = l > 8 ? yn * Math.pow( (l + 16) / 116 , 3) : yn * l * k;\n\n\t\t//wikipedia method\n\t\tx = y * 9 * _u / (4 * _v) || 0;\n\t\tz = y * (12 - 3 * _u - 20 * _v) / (4 * _v) || 0;\n\n\t\t//boronine method\n\t\t//https://github.com/boronine/husl/blob/master/husl.coffee#L201\n\t\t// x = 0 - (9 * y * _u) / ((_u - 4) * _v - _u * _v);\n\t\t// z = (9 * y - (15 * _v * y) - (_v * x)) / (3 * _v);\n\n\t\treturn [x, y, z];\n\t}\n};\n\n// http://www.brucelindbloom.com/index.html?Equations.html\n// https://github.com/boronine/husl/blob/master/husl.coffee\n//i - illuminant\n//o - observer\nxyz.luv = function(arg, i, o) {\n\tvar _u, _v, l, u, v, x, y, z, xn, yn, zn, un, vn;\n\n\t//get constants\n\tvar e = 0.008856451679035631; //(6/29)^3\n\tvar k = 903.2962962962961; //(29/3)^3\n\n\t//get illuminant/observer coords\n\ti = i || 'D65';\n\to = o || 2;\n\n\txn = xyz.whitepoint[o][i][0];\n\tyn = xyz.whitepoint[o][i][1];\n\tzn = xyz.whitepoint[o][i][2];\n\n\tun = (4 * xn) / (xn + (15 * yn) + (3 * zn));\n\tvn = (9 * yn) / (xn + (15 * yn) + (3 * zn));\n\n\n\tx = arg[0], y = arg[1], z = arg[2];\n\n\n\t_u = (4 * x) / (x + (15 * y) + (3 * z)) || 0;\n\t_v = (9 * y) / (x + (15 * y) + (3 * z)) || 0;\n\n\tvar yr = y/yn;\n\n\tl = yr <= e ? k * yr : 116 * Math.pow(yr, 1/3) - 16;\n\n\tu = 13 * l * (_u - un);\n\tv = 13 * l * (_v - vn);\n\n\treturn [l, u, v];\n};\n","/**\n * Cylindrical CIE LUV\n *\n * @module color-space/lchuv\n */\nimport luv from './luv.js';\nimport xyz from './xyz.js';\n\n//cylindrical luv\nvar lchuv = {\n\tname: 'lchuv',\n\tchannel: ['lightness', 'chroma', 'hue'],\n\talias: ['LCHuv', 'cielchuv'],\n\tmin: [0,0,0],\n\tmax: [100,100,360],\n\n\tluv: function(luv){\n\t\tvar l = luv[0],\n\t\tc = luv[1],\n\t\th = luv[2],\n\t\tu, v, hr;\n\n\t\thr = h / 360 * 2 * Math.PI;\n\t\tu = c * Math.cos(hr);\n\t\tv = c * Math.sin(hr);\n\t\treturn [l, u, v];\n\t},\n\n\txyz: function(arg) {\n\t\treturn luv.xyz(lchuv.luv(arg));\n\t}\n};\n\nexport default lchuv;\n\nluv.lchuv = function(luv){\n\tvar l = luv[0], u = luv[1], v = luv[2];\n\n\tvar c = Math.sqrt(u*u + v*v);\n\tvar hr = Math.atan2(v,u);\n\tvar h = hr * 360 / 2 / Math.PI;\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\treturn [l,c,h]\n};\n\nxyz.lchuv = function(arg){\n  return luv.lchuv(xyz.luv(arg));\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","/**\n * @module color-parse\n */\nimport names from 'color-name'\n\nexport default parse\n\n/**\n * Base hues\n * http://dev.w3.org/csswg/css-color/#typedef-named-hue\n */\n//FIXME: use external hue detector\nvar baseHues = {\n\tred: 0,\n\torange: 60,\n\tyellow: 120,\n\tgreen: 180,\n\tblue: 240,\n\tpurple: 300\n}\n\n/**\n * Parse color from the string passed\n *\n * @return {Object} A space indicator `space`, an array `values` and `alpha`\n */\nfunction parse(cstr) {\n\tvar m, parts = [], alpha = 1, space\n\n\t//numeric case\n\tif (typeof cstr === 'number') {\n\t\treturn { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\t}\n\tif (typeof cstr === 'number') return { space: 'rgb', values: [cstr >>> 16, (cstr & 0x00ff00) >>> 8, cstr & 0x0000ff], alpha: 1 }\n\n\tcstr = String(cstr).toLowerCase();\n\n\t//keyword\n\tif (names[cstr]) {\n\t\tparts = names[cstr].slice()\n\t\tspace = 'rgb'\n\t}\n\n\t//reserved words\n\telse if (cstr === 'transparent') {\n\t\talpha = 0\n\t\tspace = 'rgb'\n\t\tparts = [0, 0, 0]\n\t}\n\n\t//hex\n\telse if (cstr[0] === '#') {\n\t\tvar base = cstr.slice(1)\n\t\tvar size = base.length\n\t\tvar isShort = size <= 4\n\t\talpha = 1\n\n\t\tif (isShort) {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[0], 16),\n\t\t\t\tparseInt(base[1] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[2], 16)\n\t\t\t]\n\t\t\tif (size === 4) {\n\t\t\t\talpha = parseInt(base[3] + base[3], 16) / 255\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tparts = [\n\t\t\t\tparseInt(base[0] + base[1], 16),\n\t\t\t\tparseInt(base[2] + base[3], 16),\n\t\t\t\tparseInt(base[4] + base[5], 16)\n\t\t\t]\n\t\t\tif (size === 8) {\n\t\t\t\talpha = parseInt(base[6] + base[7], 16) / 255\n\t\t\t}\n\t\t}\n\n\t\tif (!parts[0]) parts[0] = 0\n\t\tif (!parts[1]) parts[1] = 0\n\t\tif (!parts[2]) parts[2] = 0\n\n\t\tspace = 'rgb'\n\t}\n\n\t// color space\n\telse if (m = /^((?:rgba?|hs[lvb]a?|hwba?|cmyk?|xy[zy]|gray|lab|lchu?v?|[ly]uv|lms|oklch|oklab|color))\\s*\\(([^\\)]*)\\)/.exec(cstr)) {\n\t\tvar name = m[1]\n\t\tspace = name.replace(/a$/, '')\n\t\tvar dims = space === 'cmyk' ? 4 : space === 'gray' ? 1 : 3\n\t\tparts = m[2].trim().split(/\\s*[,\\/]\\s*|\\s+/)\n\n\t\t// color(srgb-linear x x x) -> srgb-linear(x x x)\n\t\tif (space === 'color') space = parts.shift()\n\n\t\tparts = parts.map(function (x, i) {\n\t\t\t//<percentage>\n\t\t\tif (x[x.length - 1] === '%') {\n\t\t\t\tx = parseFloat(x) / 100\n\t\t\t\t// alpha -> 0..1\n\t\t\t\tif (i === 3) return x\n\t\t\t\t// rgb -> 0..255\n\t\t\t\tif (space === 'rgb') return x * 255\n\t\t\t\t// hsl, hwb H -> 0..100\n\t\t\t\tif (space[0] === 'h') return x * 100\n\t\t\t\t// lch, lab L -> 0..100\n\t\t\t\tif (space[0] === 'l' && !i) return x * 100\n\t\t\t\t// lab A B -> -125..125\n\t\t\t\tif (space === 'lab') return x * 125\n\t\t\t\t// lch C -> 0..150, H -> 0..360\n\t\t\t\tif (space === 'lch') return i < 2 ? x * 150 : x * 360\n\t\t\t\t// oklch/oklab L -> 0..1\n\t\t\t\tif (space[0] === 'o' && !i) return x\n\t\t\t\t// oklab A B -> -0.4..0.4\n\t\t\t\tif (space === 'oklab') return x * 0.4\n\t\t\t\t// oklch C -> 0..0.4, H -> 0..360\n\t\t\t\tif (space === 'oklch') return i < 2 ? x * 0.4 : x * 360\n\t\t\t\t// color(xxx) -> 0..1\n\t\t\t\treturn x\n\t\t\t}\n\n\t\t\t//hue\n\t\t\tif (space[i] === 'h' || (i === 2 && space[space.length - 1] === 'h')) {\n\t\t\t\t//<base-hue>\n\t\t\t\tif (baseHues[x] !== undefined) return baseHues[x]\n\t\t\t\t//<deg>\n\t\t\t\tif (x.endsWith('deg')) return parseFloat(x)\n\t\t\t\t//<turn>\n\t\t\t\tif (x.endsWith('turn')) return parseFloat(x) * 360\n\t\t\t\tif (x.endsWith('grad')) return parseFloat(x) * 360 / 400\n\t\t\t\tif (x.endsWith('rad')) return parseFloat(x) * 180 / Math.PI\n\t\t\t}\n\t\t\tif (x === 'none') return 0\n\t\t\treturn parseFloat(x)\n\t\t});\n\n\t\talpha = parts.length > dims ? parts.pop() : 1\n\t}\n\n\t//named channels case\n\telse if (/[0-9](?:\\s|\\/|,)/.test(cstr)) {\n\t\tparts = cstr.match(/([0-9]+)/g).map(function (value) {\n\t\t\treturn parseFloat(value)\n\t\t})\n\n\t\tspace = cstr.match(/([a-z])/ig)?.join('')?.toLowerCase() || 'rgb'\n\t}\n\n\treturn {\n\t\tspace,\n\t\tvalues: parts,\n\t\talpha\n\t}\n}\n","/**\n * @module color-space/hsl\n */\nimport rgb from './rgb.js';\n\nexport default {\n\tname: 'hsl',\n\tmin: [0,0,0],\n\tmax: [360,100,100],\n\tchannel: ['hue', 'saturation', 'lightness'],\n\talias: ['HSL'],\n\n\trgb: function(hsl) {\n\t\tvar h = hsl[0]/360, s = hsl[1]/100, l = hsl[2]/100, t1, t2, t3, rgb, val, i=0;\n\n\t\tif (s === 0) return val = l * 255, [val, val, val];\n\n\t\tt2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n\t\tt1 = 2 * l - t2;\n\n\t\trgb = [0, 0, 0];\n\t\tfor (;i<3;) {\n\t\t\tt3 = h + 1 / 3 * - (i - 1);\n\t\t\tt3 < 0 ? t3++ : t3 > 1 && t3--;\n\t\t\tval = 6 * t3 < 1 ? t1 + (t2 - t1) * 6 * t3 :\n\t\t\t2 * t3 < 1 ? t2 :\n\t\t\t3 * t3 < 2 ?  t1 + (t2 - t1) * (2 / 3 - t3) * 6 :\n\t\t\tt1;\n\t\t\trgb[i++] = val * 255;\n\t\t}\n\n\t\treturn rgb;\n\t}\n};\n\n\n//extend rgb\nrgb.hsl = function(rgb) {\n\tvar r = rgb[0]/255,\n\t\t\tg = rgb[1]/255,\n\t\t\tb = rgb[2]/255,\n\t\t\tmin = Math.min(r, g, b),\n\t\t\tmax = Math.max(r, g, b),\n\t\t\tdelta = max - min,\n\t\t\th, s, l;\n\n\tif (max === min) {\n\t\th = 0;\n\t}\n\telse if (r === max) {\n\t\th = (g - b) / delta;\n\t}\n\telse if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t}\n\telse if (b === max) {\n\t\th = 4 + (r - g)/ delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t}\n\telse if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t}\n\telse {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n","/**\n * @module ol/color\n */\nimport lchuv from 'color-space/lchuv.js';\nimport parseRgba from 'color-rgba';\nimport rgb from 'color-space/rgb.js';\nimport xyz from 'color-space/xyz.js';\nimport {clamp} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const output = xyz.lchuv(rgb.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const output = xyz.rgb(lchuv.xyz(color));\n  output[3] = color[3];\n  return output;\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throw new Error('Failed to parse \"' + s + '\" as color');\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throw new Error('Failed to parse \"' + s + '\" as color');\n    }\n  }\n  normalize(color);\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * Exported for the tests.\n * @param {Color} color Color.\n * @return {Color} Clamped color.\n */\nexport function normalize(color) {\n  color[0] = clamp((color[0] + 0.5) | 0, 0, 255);\n  color[1] = clamp((color[1] + 0.5) | 0, 0, 255);\n  color[2] = clamp((color[2] + 0.5) | 0, 0, 255);\n  color[3] = clamp(color[3], 0, 1);\n  return color;\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch (_) {\n    return false;\n  }\n}\n","/** @module  color-rgba */\nimport parse from 'color-parse'\nimport rgb from 'color-space/rgb.js'\nimport hsl from 'color-space/hsl.js'\n\nexport default function rgba(color) {\n\t// template literals\n\tif (Array.isArray(color) && color.raw) color = String.raw(...arguments)\n\tif (color instanceof Number) color = +color\n\n\tvar values, i, l\n\n\t//attempt to parse non-array arguments\n\tvar parsed = parse(color)\n\n\tif (!parsed.space) return []\n\n\tconst min = parsed.space[0] === 'h' ? hsl.min : rgb.min\n\tconst max = parsed.space[0] === 'h' ? hsl.max : rgb.max\n\n\tvalues = Array(3)\n\tvalues[0] = Math.min(Math.max(parsed.values[0], min[0]), max[0])\n\tvalues[1] = Math.min(Math.max(parsed.values[1], min[1]), max[1])\n\tvalues[2] = Math.min(Math.max(parsed.values[2], min[2]), max[2])\n\n\tif (parsed.space[0] === 'h') {\n\t\tvalues = hsl.rgb(values)\n\t}\n\n\tvalues.push(Math.min(Math.max(parsed.alpha, 0), 1))\n\n\treturn values\n}\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Firefox as browser.\n * @type {boolean}\n */\nexport const FIREFOX = ua.includes('firefox');\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch (error) {\n    // passive not supported\n  }\n  return passive;\n})();\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove.\n * @return {Node|null} The node that was removed or null.\n */\nexport function removeNode(node) {\n  return node && node.parentNode ? node.parentNode.removeChild(node) : null;\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.removeChild(node.lastChild);\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 32;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `32`. Change this value when\n   * your map uses more than 32 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport EventTarget from '../events/Target.js';\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {decodeFallback} from '../Image.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch (e) {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch (e) {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const canvas = document.createElement('canvas');\n    canvas.width = Math.ceil(image.width * pixelRatio);\n    canvas.height = Math.ceil(image.height * pixelRatio);\n\n    const ctx = canvas.getContext('2d');\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          this.addEventListener(EventType.CHANGE, function onChange() {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          });\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/Image\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport ImageState from './ImageState.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|import(\"./Image.js\").Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"./Image.js\").Loader}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              image instanceof ImageBitmap ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\nimport {toString} from './color.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: 'normal',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] = value;\n    }\n  }\n  style.families = style.family.split(/,\\s?/);\n  return style;\n};\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {getFontParameters} from '../css.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  const size = '32px ';\n  const referenceFonts = ['monospace', 'serif'];\n  const len = referenceFonts.length;\n  const text = 'wmytzilWMYTZIL@#/&?$%10\\uF013';\n  let interval, referenceWidth;\n\n  /**\n   * @param {string} fontStyle Css font-style\n   * @param {string} fontWeight Css font-weight\n   * @param {*} fontFamily Css font-family\n   * @return {boolean} Font with style and weight is available\n   */\n  function isAvailable(fontStyle, fontWeight, fontFamily) {\n    let available = true;\n    for (let i = 0; i < len; ++i) {\n      const referenceFont = referenceFonts[i];\n      referenceWidth = measureTextWidth(\n        fontStyle + ' ' + fontWeight + ' ' + size + referenceFont,\n        text,\n      );\n      if (fontFamily != referenceFont) {\n        const width = measureTextWidth(\n          fontStyle +\n            ' ' +\n            fontWeight +\n            ' ' +\n            size +\n            fontFamily +\n            ',' +\n            referenceFont,\n          text,\n        );\n        // If width and referenceWidth are the same, then the fallback was used\n        // instead of the font we wanted, so the font is not available.\n        available = available && width != referenceWidth;\n      }\n    }\n    if (available) {\n      return true;\n    }\n    return false;\n  }\n\n  function check() {\n    let done = true;\n    const fonts = checkedFonts.getKeys();\n    for (let i = 0, ii = fonts.length; i < ii; ++i) {\n      const font = fonts[i];\n      if (checkedFonts.get(font) < retries) {\n        if (isAvailable.apply(this, font.split('\\n'))) {\n          clear(textHeights);\n          // Make sure that loaded fonts are picked up by Safari\n          measureContext = null;\n          measureFont = undefined;\n          checkedFonts.set(font, retries);\n        } else {\n          checkedFonts.set(font, checkedFonts.get(font) + 1, true);\n          done = false;\n        }\n      }\n    }\n    if (done) {\n      clearInterval(interval);\n      interval = undefined;\n    }\n  }\n\n  return function (fontSpec) {\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    for (let i = 0, ii = families.length; i < ii; ++i) {\n      const family = families[i];\n      const key = font.style + '\\n' + font.weight + '\\n' + family;\n      if (checkedFonts.get(key) === undefined) {\n        checkedFonts.set(key, retries, true);\n        if (!isAvailable(font.style, font.weight, family)) {\n          checkedFonts.set(key, 0, true);\n          if (interval === undefined) {\n            interval = setInterval(check, 32);\n          }\n        }\n      }\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvases_;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius_ = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   */\n  getImage(pixelRatio) {\n    let image = this.canvases_[pixelRatio];\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const context = createCanvasContext2D(\n        renderOptions.size * pixelRatio,\n        renderOptions.size * pixelRatio,\n      );\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      this.canvases_[pixelRatio] = image;\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius_;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius_;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius_, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.canvases_ = {};\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius_;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius_ = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is an {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\nimport {assert} from '../asserts.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * * **declutter**: Overlapping symbols and text are decluttered.\n * * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes an {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Icon\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport ImageStyle from './Image.js';\nimport {asArray} from '../color.js';\nimport {assert} from '../asserts.js';\nimport {get as getIconImage} from './IconImage.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Text\n */\nimport Fill from './Fill.js';\nimport {toSize} from '../size.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {isStringColor} from '../color.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', 'attributeName', typeHint]` fetches a feature property value, similar to `feature.get('attributeName')`\n *     A type hint can optionally be specified, in case the resulting expression contains a type ambiguity which\n *     will make it invalid. Type hints can be one of: 'string', 'color', 'number', 'boolean', 'number[]'\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *\n * * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {import(\"../style/flat.js\").FlatStyle|import(\"../style/webgl.js\").WebGLStyle} style The style being parsed\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    style: {},\n  };\n}\n\n/**\n * @param {string} typeHint Type hint\n * @return {number} Resulting value type (will be a single type)\n */\nfunction getTypeFromHint(typeHint) {\n  switch (typeHint) {\n    case 'string':\n      return StringType;\n    case 'color':\n      return ColorType;\n    case 'number':\n      return NumberType;\n    case 'boolean':\n      return BooleanType;\n    case 'number[]':\n      return NumberArrayType;\n    default:\n      throw new Error(`Unrecognized type hint: ${typeHint}`);\n  }\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, context, typeHint) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      return new LiteralExpression(\n        typeHint === SizeType ? SizeType : NumberType,\n        encoded,\n      );\n    }\n    case 'string': {\n      let type = StringType;\n      if (isStringColor(encoded)) {\n        type |= ColorType;\n      }\n      // apply the given type hint only if it won't result in an empty type\n      if (!isType(type & typeHint, NoneType)) {\n        type &= typeHint;\n      }\n      return new LiteralExpression(type, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('Expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('Empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, context, typeHint);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('Expected an array of numbers');\n    }\n  }\n\n  let type = NumberArrayType;\n  if (encoded.length === 2) {\n    type |= SizeType;\n  } else if (encoded.length === 3 || encoded.length === 4) {\n    type |= ColorType;\n  }\n  if (typeHint) {\n    type &= typeHint;\n  }\n  return new LiteralExpression(type, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n};\n\n/**\n * @typedef {function(Array, ParsingContext, number):Expression} Parser\n * Third argument is a type hint\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createParser(\n    ([_, typeHint]) => {\n      if (typeHint !== undefined) {\n        return getTypeFromHint(\n          /** @type {string} */ (\n            /** @type {LiteralExpression} */ (typeHint).value\n          ),\n        );\n      }\n      return AnyType;\n    },\n    withArgsCount(1, 2),\n    withGetArgs,\n  ),\n  [Ops.Var]: createParser(\n    ([firstArg]) => firstArg.type,\n    withArgsCount(1, 1),\n    withVarArgs,\n  ),\n  [Ops.Id]: createParser(NumberType | StringType, withNoArgs, usesFeatureId),\n  [Ops.Concat]: createParser(\n    StringType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.GeometryType]: createParser(StringType, withNoArgs, usesGeometryType),\n  [Ops.Resolution]: createParser(NumberType, withNoArgs),\n  [Ops.Zoom]: createParser(NumberType, withNoArgs),\n  [Ops.Time]: createParser(NumberType, withNoArgs),\n  [Ops.Any]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createParser(\n    BooleanType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createParser(\n    BooleanType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.NotEqual]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.GreaterThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThan]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.LessThanOrEqualTo]: createParser(\n    BooleanType,\n    withArgsCount(2, 2),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Multiply]: createParser(\n    (parsedArgs) => {\n      let outputType = NumberType | ColorType;\n      for (let i = 0; i < parsedArgs.length; i++) {\n        outputType &= parsedArgs[i].type;\n      }\n      return outputType;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType | ColorType),\n    narrowArgsType,\n  ),\n  [Ops.Coalesce]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(2, Infinity),\n    parseArgsOfType(AnyType),\n    narrowArgsType,\n  ),\n  [Ops.Divide]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createParser(\n    NumberType,\n    withArgsCount(2, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createParser(\n    NumberType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createParser(\n    NumberType,\n    withArgsCount(2, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createParser(\n    NumberType,\n    withArgsCount(1, 2),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createParser(\n    NumberType,\n    withArgsCount(1, 1),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 2; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(4, Infinity),\n    withEvenArgs,\n    parseMatchArgs,\n  ),\n  [Ops.Between]: createParser(\n    BooleanType,\n    withArgsCount(3, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createParser(\n    (parsedArgs) => {\n      let type = ColorType | NumberType;\n      for (let i = 3; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      return type;\n    },\n    withArgsCount(6, Infinity),\n    withEvenArgs,\n    parseInterpolateArgs,\n  ),\n  [Ops.Case]: createParser(\n    (parsedArgs) => {\n      let type = AnyType;\n      for (let i = 1; i < parsedArgs.length; i += 2) {\n        type &= parsedArgs[i].type;\n      }\n      type &= parsedArgs[parsedArgs.length - 1].type;\n      return type;\n    },\n    withArgsCount(3, Infinity),\n    withOddArgs,\n    parseCaseArgs,\n  ),\n  [Ops.In]: createParser(BooleanType, withArgsCount(2, 2), parseInArgs),\n  [Ops.Number]: createParser(\n    NumberType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.String]: createParser(\n    StringType,\n    withArgsCount(1, Infinity),\n    parseArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createParser(\n    (parsedArgs) => {\n      return parsedArgs.length === 2\n        ? NumberArrayType | SizeType\n        : parsedArgs.length === 3 || parsedArgs.length === 4\n          ? NumberArrayType | ColorType\n          : NumberArrayType;\n    },\n    withArgsCount(1, Infinity),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createParser(\n    ColorType,\n    withArgsCount(1, 4),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createParser(\n    NumberType,\n    withArgsCount(1, 3),\n    parseArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createParser(ColorType, withArgsCount(2, 2), parsePaletteArgs),\n  [Ops.ToString]: createParser(\n    StringType,\n    withArgsCount(1, 1),\n    parseArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, ParsingContext, Array<Expression>, number?):Array<Expression>|void} ArgValidator\n * An argument validator applies various checks to an encoded expression arguments\n * Returns the parsed arguments if any.\n * Third argument is the array of parsed arguments from previous validators\n * Fourth argument is an optional type hint\n */\n\n/**\n * @type ArgValidator\n */\nfunction withGetArgs(encoded, context) {\n  const arg = parse(encoded[1], context);\n  if (!(arg instanceof LiteralExpression)) {\n    throw new Error('Expected a literal argument for get operation');\n  }\n  if (typeof arg.value !== 'string') {\n    throw new Error('Expected a string argument for get operation');\n  }\n  context.properties.add(arg.value);\n  if (encoded.length === 3) {\n    const hint = parse(encoded[2], context);\n    return [arg, hint];\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction withVarArgs(encoded, context, parsedArgs, typeHint) {\n  const varName = encoded[1];\n  if (typeof varName !== 'string') {\n    throw new Error('Expected a string argument for var operation');\n  }\n  context.variables.add(varName);\n  if (\n    !('variables' in context.style) ||\n    context.style.variables[varName] === undefined\n  ) {\n    return [new LiteralExpression(AnyType, varName)];\n  }\n  const initialValue = context.style.variables[varName];\n  const arg = /** @type {LiteralExpression} */ (parse(initialValue, context));\n  arg.value = varName;\n  if (typeHint && !overlapsType(typeHint, arg.type)) {\n    throw new Error(\n      `The variable ${varName} has type ${typeName(\n        arg.type,\n      )} but the following type was expected: ${typeName(typeHint)}`,\n    );\n  }\n  return [arg];\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesFeatureId(encoded, context) {\n  context.featureId = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction usesGeometryType(encoded, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type ArgValidator\n */\nfunction withNoArgs(encoded, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`Expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsCount(minArgs, maxArgs) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `Expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `Expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction parseArgsOfType(argType) {\n  return function (encoded, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], context);\n      if (!overlapsType(argType, expression.type)) {\n        const gotType = typeName(argType);\n        const expectedType = typeName(expression.type);\n        throw new Error(\n          `Unexpected type for argument ${i} of ${operation} operation` +\n            `, got ${gotType} but expected ${expectedType}`,\n        );\n      }\n      expression.type &= argType;\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction narrowArgsType(encoded, context, parsedArgs) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n\n  // first pass to determine a narrowed down type\n  let sameType = AnyType;\n  for (let i = 0; i < parsedArgs.length; ++i) {\n    sameType &= parsedArgs[i].type;\n  }\n\n  if (sameType === NoneType) {\n    throw new Error(\n      `No common type could be found for arguments of ${operation} operation`,\n    );\n  }\n\n  // re-parse args\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    args[i] = parse(encoded[i + 1], context, sameType);\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withOddArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `An odd amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withEvenArgs(encoded, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `An even amount of arguments was expected for operation ${operation}, got ${JSON.stringify(\n        argCount,\n      )} instead`,\n    );\n  }\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseMatchArgs(encoded, context, parsedArgs, typeHint) {\n  const argsCount = encoded.length - 1;\n\n  const input = parse(encoded[1], context);\n  let inputType = input.type;\n  const fallback = parse(encoded[encoded.length - 1], context);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context);\n    const output = parse(encoded[i + 3], context);\n    inputType &= match.type;\n    outputType &= output.type;\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  // check input and output types validity\n  const expectedInputType = StringType | NumberType | BooleanType;\n  if (!overlapsType(expectedInputType, inputType)) {\n    throw new Error(\n      `Expected an input of type ${typeName(\n        expectedInputType,\n      )} for the interpolate operation` +\n        `, got ${typeName(inputType)} instead`,\n    );\n  }\n  inputType &= expectedInputType;\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following match operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again inputs and outputs with common type\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    const match = parse(encoded[i + 2], context, inputType);\n    const output = parse(encoded[i + 3], context, outputType);\n    args[i] = match;\n    args[i + 1] = output;\n  }\n\n  return [\n    parse(encoded[1], context, inputType),\n    ...args,\n    parse(encoded[encoded.length - 1], context, outputType),\n  ];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInterpolateArgs(encoded, context, parsedArgs, typeHint) {\n  const interpolationType = encoded[1];\n  let interpolation;\n  switch (interpolationType[0]) {\n    case 'linear':\n      interpolation = 1;\n      break;\n    case 'exponential':\n      interpolation = interpolationType[1];\n      if (typeof interpolation !== 'number') {\n        throw new Error(\n          `Expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(interpolation)} instead`,\n        );\n      }\n      break;\n    default:\n      interpolation = null;\n  }\n  if (!interpolation) {\n    throw new Error(\n      `Invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n    );\n  }\n  interpolation = parse(interpolation, context);\n\n  // check input types\n  let input = parse(encoded[2], context);\n  if (!overlapsType(NumberType, input.type)) {\n    throw new Error(\n      `Expected an input of type number for the interpolate operation` +\n        `, got ${typeName(input.type)} instead`,\n    );\n  }\n  input = parse(encoded[2], context, NumberType); // parse again with narrower output\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    let stop = parse(encoded[i + 3], context);\n    if (!overlapsType(NumberType, stop.type)) {\n      throw new Error(\n        `Expected all stop input values in the interpolate operation to be of type number` +\n          `, got ${typeName(stop.type)} at position ${i + 2} instead`,\n      );\n    }\n    let output = parse(encoded[i + 4], context);\n    if (!overlapsType(NumberType | ColorType, output.type)) {\n      throw new Error(\n        `Expected all stop output values in the interpolate operation to be a number or color` +\n          `, got ${typeName(output.type)} at position ${i + 3} instead`,\n      );\n    }\n    // parse again with narrower types\n    stop = parse(encoded[i + 3], context, NumberType);\n    output = parse(encoded[i + 4], context, NumberType | ColorType);\n    args[i] = stop;\n    args[i + 1] = output;\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseCaseArgs(encoded, context, parsedArgs, typeHint) {\n  const fallback = parse(encoded[encoded.length - 1], context, typeHint);\n  let outputType =\n    typeHint !== undefined ? typeHint & fallback.type : fallback.type;\n\n  // first parse args to figure out possible types\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    const condition = parse(encoded[i + 1], context);\n    const output = parse(encoded[i + 2], context, typeHint);\n    if (!overlapsType(BooleanType, condition.type)) {\n      throw new Error(\n        `Expected all conditions in the case operation to be of type boolean` +\n          `, got ${typeName(condition.type)} at position ${i} instead`,\n      );\n    }\n    outputType &= output.type;\n    args[i] = condition;\n    args[i + 1] = output;\n  }\n\n  if (isType(outputType, NoneType)) {\n    throw new Error(\n      `Could not find a common output type for the following case operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  // parse again args with common output type\n  for (let i = 0; i < args.length - 1; i += 2) {\n    args[i + 1] = parse(encoded[i + 2], context, outputType);\n  }\n  args[args.length - 1] = parse(\n    encoded[encoded.length - 1],\n    context,\n    outputType,\n  );\n\n  return args;\n}\n\n/**\n * @type ArgValidator\n */\nfunction parseInArgs(encoded, context) {\n  /** @type {Array<number|string>} */\n  let haystack = /** @type {any} */ (encoded[2]);\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n    );\n  }\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `For the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions.`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `The \"in\" operator was provided a literal value which was not an array as second argument.`,\n      );\n    }\n    haystack = haystack[1];\n  }\n\n  let needleType = StringType | NumberType;\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    const arg = parse(haystack[i], context);\n    needleType &= arg.type;\n    args[i] = arg;\n  }\n  if (isType(needleType, NoneType)) {\n    throw new Error(\n      `Could not find a common type for the following in operation: ` +\n        JSON.stringify(encoded),\n    );\n  }\n\n  const needle = parse(encoded[1], context, needleType);\n  return [needle, ...args];\n}\n\n/**\n * @type ArgValidator\n */\nfunction parsePaletteArgs(encoded, context) {\n  const index = parse(encoded[1], context, NumberType);\n  if (index.type !== NumberType) {\n    throw new Error(\n      `The first argument of palette must be an number, got ${typeName(\n        index.type,\n      )} instead`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('The second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    const color = parse(colors[i], context, ColorType);\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `The palette color at index ${i} must be a literal value`,\n      );\n    }\n    if (!overlapsType(color.type, ColorType)) {\n      throw new Error(\n        `The palette color at index ${i} should be of type color, got ${typeName(\n          color.type,\n        )} instead`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {number|function(Array<Expression>):number} returnType The return type of the operator; can be a fixed value or a callback taking the parsed\n * arguments\n * @param {Array<ArgValidator>} argValidators A chain of argument validators; the return value of the last validator\n * will be used as parsed arguments\n * @return {Parser} The parser.\n */\nfunction createParser(returnType, ...argValidators) {\n  return function (encoded, context, typeHint) {\n    const operator = encoded[0];\n    let parsedArgs = [];\n    for (let i = 0; i < argValidators.length; i++) {\n      parsedArgs =\n        argValidators[i](encoded, context, parsedArgs, typeHint) || parsedArgs;\n    }\n    let actualType =\n      typeof returnType === 'function' ? returnType(parsedArgs) : returnType;\n    if (typeHint !== undefined) {\n      if (!overlapsType(actualType, typeHint)) {\n        throw new Error(\n          `The following expression was expected to return ${typeName(\n            typeHint,\n          )}, but returns ${typeName(actualType)} instead: ${JSON.stringify(\n            encoded,\n          )}`,\n        );\n      }\n      actualType &= typeHint;\n    }\n    if (actualType === NoneType) {\n      throw new Error(\n        `No matching type was found for the following expression: ${JSON.stringify(\n          encoded,\n        )}`,\n      );\n    }\n    return new CallExpression(actualType, operator, ...parsedArgs);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {ParsingContext} context The parsing context.\n * @param {number} [typeHint] Optional type hint\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, context, typeHint) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`Unknown operator: ${operator}`);\n  }\n  return parser(encoded, context, typeHint);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  ColorType,\n  LiteralExpression,\n  Ops,\n  overlapsType,\n  parse,\n  typeName,\n} from './expression.js';\nimport {\n  fromString,\n  lchaToRgba,\n  normalize,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, context);\n  if (!overlapsType(type, expression.type)) {\n    const expected = typeName(type);\n    const actual = typeName(expression.type);\n    throw new Error(\n      `Expected expression to be of type ${expected}, got ${actual}`,\n    );\n  }\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => context.properties[name];\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return normalize(lchaToRgba(lcha));\n}\n","/**\n * @module ol/render/canvas/style\n */\n\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === 'none') {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === 'none') {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    ColorType | StringType,\n    context,\n  );\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport Layer from './Layer.js';\nimport RBush from 'rbush';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<import('../Feature').FeatureLike>|import(\"../source/VectorTile.js\").default<import('../Feature').FeatureLike>} VectorSourceType\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @extends {Layer<VectorSourceType, RendererType>}\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {function(import(\"../Feature.js\").default, import(\"../Feature.js\").default): number|null|undefined} Render\n   *     order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type Array<import(\"../style/flat.js\").Rule>\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {TRUE} from '../functions.js';\nimport {abstract} from '../util.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {getWidth} from '../extent.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {inView} from '../layer/Layer.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Composite\n */\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport MapRenderer from './Map.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport {inView} from '../layer/Layer.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {replaceChildren} from '../dom.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText.bind(map),\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.parentNode.removeChild(this.element_);\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(function (a, b) {\n      return a.zIndex - b.zIndex;\n    });\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/layer/Group\n */\nimport BaseLayer from './Base.js';\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\nimport {getIntersection} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {listen, unlistenByKey} from '../events.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {UIEvent} EVENT\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport EventType from './events/EventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport Target from './events/Target.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {listen, unlistenByKey} from './events.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\nimport TileState from './TileState.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import(\"./coordinate.js\").Coordinate, number): number} PriorityFunction\n */\n\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      /**\n       * @param {Array} element Element.\n       * @return {number} Priority.\n       */\n      function (element) {\n        return tilePriorityFunction.apply(null, element);\n      },\n      /**\n       * @param {Array} element Element.\n       * @return {string} Key.\n       */\n      function (element) {\n        return /** @type {import(\"./Tile.js\").default} */ (element[0]).getKey();\n      },\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {Array} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    let state, tile, tileKey;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      tile = /** @type {import(\"./Tile.js\").default} */ (this.dequeue()[0]);\n      tileKey = tile.getKey();\n      state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/control/Control\n */\nimport BaseObject from '../Object.js';\nimport MapEventType from '../MapEventType.js';\nimport {VOID} from '../functions.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {removeNode} from '../dom.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    removeNode(this.element);\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      removeNode(this.element);\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_\n        ? this.target_\n        : map.getOverlayContainerStopEvent();\n      target.appendChild(this.element);\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {equals} from '../array.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport {toPromise} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const visibleAttributions = Array.from(\n      new Set(\n        this.getMap()\n          .getAllLayers()\n          .flatMap((layer) => layer.getAttributions(frameState)),\n      ),\n    );\n\n    const collapsible = !this.getMap()\n      .getAllLayers()\n      .some(\n        (layer) =>\n          layer.getSource() &&\n          layer.getSource().getAttributionsCollapsible() === false,\n      );\n    if (!this.overrideCollapsible_) {\n      this.setCollapsible(collapsible);\n    }\n    return visibleAttributions;\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport InteractionProperty from './Property.js';\nimport {easeOut, linear} from '../easing.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} handleEvent\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/interaction/Pointer\n */\nimport Interaction from './Interaction.js';\nimport MapBrowserEventType from '../MapBrowserEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\nimport {assert} from '../asserts.js';\n\n/**\n * A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n  return targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  return event.map.getTargetElement().hasAttribute('tabindex')\n    ? focus(event)\n    : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = /** @type {MouseEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return originalEvent.button == 0 && !(WEBKIT && MAC && originalEvent.ctrlKey);\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvt !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = /** @type {import(\"../MapBrowserEvent\").default} */ (\n    mapBrowserEvent\n  ).originalEvent;\n  assert(\n    pointerEvent !== undefined,\n    'mapBrowserEvent must originate from a pointer event',\n  );\n  return pointerEvent.isPrimary && pointerEvent.button === 0;\n};\n","/**\n * @module ol/interaction/DragPan\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {easeOut} from '../easing.js';\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport PointerInteraction from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport PointerInteraction from './Pointer.js';\nimport RenderBox from '../render/Box.js';\nimport {mouseActionButton} from '../events/condition.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea !== undefined ? options.minArea : 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ = options.boxEndCondition\n      ? options.boxEndCondition\n      : this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    this.box_.setMap(null);\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport DragBox from './DragBox.js';\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with an {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {pan} from './Interaction.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport {rotate as rotateCoordinate} from '../coordinate.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\nimport {DEVICE_PIXEL_RATIO, FIREFOX} from '../has.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../coordinate.js\").Coordinate}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.coordinate;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta;\n    if (mapBrowserEvent.type == EventType.WHEEL) {\n      delta = wheelEvent.deltaY;\n      if (FIREFOX && wheelEvent.deltaMode === WheelEvent.DOM_DELTA_PIXEL) {\n        delta /= DEVICE_PIXEL_RATIO;\n      }\n      if (wheelEvent.deltaMode === WheelEvent.DOM_DELTA_LINE) {\n        delta *= 40;\n      }\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(-delta / this.deltaPerZoom_, this.lastAnchor_);\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(view, delta, this.lastAnchor_, this.duration_);\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\nimport {FALSE} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/Map\n */\nimport BaseObject from './Object.js';\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport EventType from './events/EventType.js';\nimport Layer from './layer/Layer.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport PointerEventType from './pointer/EventType.js';\nimport RenderEventType from './render/EventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {TRUE} from './functions.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {assert} from './asserts.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport {equals} from './array.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport {getUid} from './util.js';\nimport {hasArea} from './size.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {removeNode} from './dom.js';\nimport {warn} from './console.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default>|null} declutter Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, ?FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.renderComplete_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {UIEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = /** @type {PointerEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !(rootNode === doc ? doc.documentElement : rootNode).contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_ === true) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n      postRenderFunctions[i](this, frameState);\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      removeNode(this.viewport_);\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      const keyboardEventTarget = !this.keyboardEventTarget_\n        ? targetElement\n        : this.keyboardEventTarget_;\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    const layerStates = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      this.hasListener(MapEventType.LOADSTART) ||\n      this.hasListener(MapEventType.LOADEND) ||\n      this.hasListener(RenderEventType.RENDERCOMPLETE)\n        ? !this.tileQueue_.getTilesLoading() &&\n          !this.tileQueue_.getCount() &&\n          !this.getLoadingOrNotReady()\n        : undefined;\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [width, height];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {boolean} [useInterimTilesOnError=true] Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/renderer/Layer\n */\nimport EventType from '../events/EventType.js';\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @protected\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (!tiles[zoom]) {\n      tiles[zoom] = {};\n    }\n    tiles[zoom][tile.tileCoord.toString()] = tile;\n    return undefined;\n  }\n\n  /**\n   * Create a function that adds loaded tiles to the tile lookup.\n   * @param {import(\"../source/Tile.js\").default} source Tile source.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection of the tiles.\n   * @param {Object<number, Object<string, import(\"../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @return {function(number, import(\"../TileRange.js\").default):boolean} A function that can be\n   *     called with a zoom level and a tile range to add loaded tiles to the lookup.\n   * @protected\n   */\n  createLoadedTileFinder(source, projection, tiles) {\n    return (\n      /**\n       * @param {number} zoom Zoom level.\n       * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n       * @return {boolean} The tile range is fully loaded.\n       */\n      (zoom, tileRange) => {\n        const callback = this.loadedTileCallback.bind(this, tiles, zoom);\n        return source.forEachLoadedTile(projection, zoom, tileRange, callback);\n      }\n    );\n  }\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          if (!this.instructions_[this.zIndex + this.offset_]) {\n            this.instructions_[this.zIndex + this.offset_] = [];\n          }\n          this.instructions_[this.zIndex + this.offset_].push(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.instructions_[this.zIndex + this.offset_].push(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.instructions_[this.zIndex + this.offset_].push(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport LayerRenderer from '../Layer.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {equals} from '../../array.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.pixelContext_ = null;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch (err) {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS Transform.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && context.canvas.style.transform === transform) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/reproj\n */\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {getPointResolution, transform} from './proj.js';\nimport {solveLinearSystem} from './math.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/Tile\n */\nimport EventTarget from './events/Target.js';\nimport EventType from './events/EventType.js';\nimport TileState from './TileState.js';\nimport {abstract} from './util.js';\nimport {easeIn} from './easing.js';\n\n/**\n * A function that takes an {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes an {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * An \"interim\" tile for this tile. The interim tile may be used while this\n     * one is loading, for \"smooth\" transitions when changing params/dimensions\n     * on the source.\n     * @type {Tile|null}\n     */\n    this.interimTile = null;\n\n    /**\n     * A key assigned to the tile. This is used by the tile source to determine\n     * if this tile can effectively be used, or if a new tile should be created\n     * and this one be used as an interim tile for this new tile.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    if (this.state === TileState.ERROR) {\n      // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n      this.setState(TileState.EMPTY);\n    }\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the interim tile most suitable for rendering using the chain of interim\n   * tiles. This corresponds to the  most recent tile that has been loaded, if no\n   * such tile exists, the original tile is returned.\n   * @return {!Tile} Best tile for rendering.\n   */\n  getInterimTile() {\n    let tile = this.interimTile;\n    if (!tile) {\n      //empty chain\n      return this;\n    }\n\n    // find the first loaded tile and return it. Since the chain is sorted in\n    // decreasing order of creation time, there is no need to search the remainder\n    // of the list (all those tiles correspond to older requests and will be\n    // cleaned up by refreshInterimChain)\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        // Show tile immediately instead of fading it in after loading, because\n        // the interim tile is in place already\n        this.transition_ = 0;\n        return tile;\n      }\n      tile = tile.interimTile;\n    } while (tile);\n\n    // we can not find a better tile\n    return this;\n  }\n\n  /**\n   * Goes through the chain of interim tiles and discards sections of the chain\n   * that are no longer relevant.\n   */\n  refreshInterimChain() {\n    let tile = this.interimTile;\n    if (!tile) {\n      return;\n    }\n\n    /** @type {Tile} */\n    let prev = this;\n    do {\n      if (tile.getState() == TileState.LOADED) {\n        //we have a loaded tile, we can discard the rest of the list\n        //we would could abort any LOADING tile request\n        //older than this tile (i.e. any LOADING tile following this entry in the chain)\n        tile.interimTile = null;\n        break;\n      }\n      if (tile.getState() == TileState.LOADING) {\n        //keep this LOADING tile any loaded tiles later in the chain are\n        //older than this tile, so we're still interested in the request\n        prev = tile;\n      } else if (tile.getState() == TileState.IDLE) {\n        //the head of the list is the most current tile, we don't need\n        //to start any other requests for this chain\n        prev.interimTile = tile.interimTile;\n      } else {\n        prev = tile;\n      }\n      tile = prev.interimTile;\n    } while (tile);\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/ImageTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {listenImage} from './Image.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   *\n   * @api\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {getTransform} from '../proj.js';\nimport {modulo} from '../math.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\nimport {ERROR_THRESHOLD} from './common.js';\n\nimport EventType from '../events/EventType.js';\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport Triangulation from './Triangulation.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {clamp} from '../math.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {releaseCanvas} from '../dom.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(\n            tile,\n            EventType.CHANGE,\n            function (e) {\n              const state = tile.getState();\n              if (\n                state == TileState.LOADED ||\n                state == TileState.ERROR ||\n                state == TileState.EMPTY\n              ) {\n                unlistenByKey(sourceListenKey);\n                leftToLoad--;\n                if (leftToLoad === 0) {\n                  this.unlistenSources_();\n                  this.reproject_();\n                }\n              }\n            },\n            this,\n          );\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport CanvasLayerRenderer from './Layer.js';\nimport ImageTile from '../../ImageTile.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {toSize} from '../../size.js';\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   */\n  constructor(tileLayer) {\n    super(tileLayer);\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedRevision;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.newTiles_ = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tmpExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tmpTileRange_ = new TileRange(0, 0, 0, 0);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean} Tile is drawable.\n   */\n  isDrawableTile(tile) {\n    const tileLayer = this.getLayer();\n    const tileState = tile.getState();\n    const useInterimTilesOnError = tileLayer.getUseInterimTilesOnError();\n    return (\n      tileState == TileState.LOADED ||\n      tileState == TileState.EMPTY ||\n      (tileState == TileState.ERROR && !useInterimTilesOnError)\n    );\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {!import(\"../../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, frameState) {\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    let tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n    if (tile.getState() == TileState.ERROR) {\n      if (tileLayer.getUseInterimTilesOnError() && tileLayer.getPreload() > 0) {\n        // Preloaded tiles for lower resolutions might have finished loading.\n        this.newTiles_ = true;\n      }\n    }\n    if (!this.isDrawableTile(tile)) {\n      tile = tile.getInterimTile();\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const pixelRatio = frameState.pixelRatio;\n    const projection = frameState.viewState.projection;\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = source.getTile(\n        z,\n        tileCoord[1],\n        tileCoord[2],\n        pixelRatio,\n        projection,\n      );\n      if (\n        !(tile instanceof ImageTile || tile instanceof ReprojTile) ||\n        (tile instanceof ReprojTile && tile.getState() === TileState.EMPTY)\n      ) {\n        return null;\n      }\n\n      if (tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(tile.getImage(), col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * @param {Object<number, Object<string, import(\"../../Tile.js\").default>>} tiles Lookup of loaded tiles by zoom level.\n   * @param {number} zoom Zoom level.\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @return {boolean|void} If `false`, the tile will not be considered loaded.\n   */\n  loadedTileCallback(tiles, zoom, tile) {\n    if (this.isDrawableTile(tile)) {\n      return super.loadedTileCallback(tiles, zoom, tile);\n    }\n    return false;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return !!this.getLayer().getSource();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const rotation = viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const sourceRevision = tileSource.getRevision();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    let extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      extent = getIntersection(\n        extent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    const tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z);\n\n    /**\n     * @type {Object<number, Object<string, import(\"../../Tile.js\").default>>}\n     */\n    const tilesToDrawByZ = {};\n    tilesToDrawByZ[z] = {};\n\n    const findLoadedTiles = this.createLoadedTileFinder(\n      tileSource,\n      projection,\n      tilesToDrawByZ,\n    );\n\n    const tmpExtent = this.tmpExtent;\n    const tmpTileRange = this.tmpTileRange_;\n    this.newTiles_ = false;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        if (\n          rotation &&\n          !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n        ) {\n          continue;\n        }\n        const tile = this.getTile(z, x, y, frameState);\n        if (this.isDrawableTile(tile)) {\n          const uid = getUid(this);\n          if (tile.getState() == TileState.LOADED) {\n            tilesToDrawByZ[z][tile.tileCoord.toString()] = tile;\n            let inTransition = tile.inTransition(uid);\n            if (inTransition && layerState.opacity !== 1) {\n              // Skipping transition when layer is not fully opaque avoids visual artifacts.\n              tile.endTransition(uid);\n              inTransition = false;\n            }\n            if (\n              !this.newTiles_ &&\n              (inTransition || !this.renderedTiles.includes(tile))\n            ) {\n              this.newTiles_ = true;\n            }\n          }\n          if (tile.getAlpha(uid, frameState.time) === 1) {\n            // don't look for alt tiles if alpha is 1\n            continue;\n          }\n        }\n\n        const childTileRange = tileGrid.getTileCoordChildTileRange(\n          tile.tileCoord,\n          tmpTileRange,\n          tmpExtent,\n        );\n\n        let covered = false;\n        if (childTileRange) {\n          covered = findLoadedTiles(z + 1, childTileRange);\n        }\n        if (!covered) {\n          tileGrid.forEachTileCoordParentTileRange(\n            tile.tileCoord,\n            findLoadedTiles,\n            tmpTileRange,\n            tmpExtent,\n          );\n        }\n      }\n    }\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerExtent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    this.renderedTiles.length = 0;\n    /** @type {Array<number>} */\n    let zs = Object.keys(tilesToDrawByZ).map(Number);\n    zs.sort(ascending);\n\n    let clips, clipZs, currentClip;\n    if (\n      layerState.opacity === 1 &&\n      (!this.containerReused ||\n        tileSource.getOpaque(frameState.viewState.projection))\n    ) {\n      zs = zs.reverse();\n    } else {\n      clips = [];\n      clipZs = [];\n    }\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      const tilesToDraw = tilesToDrawByZ[currentZ];\n      for (const tileCoordKey in tilesToDraw) {\n        const tile = /** @type {import(\"../../ImageTile.js\").default} */ (\n          tilesToDraw[tileCoordKey]\n        );\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = z === currentZ;\n\n        const inTransition =\n          transition && tile.getAlpha(getUid(this), frameState.time) !== 1;\n        let contextSaved = false;\n        if (!inTransition) {\n          if (clips) {\n            // Clip mask for regions in this tile that already filled by a higher z tile\n            currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n            for (let i = 0, ii = clips.length; i < ii; ++i) {\n              if (z !== currentZ && currentZ < clipZs[i]) {\n                const clip = clips[i];\n                if (\n                  intersects(\n                    [x, y, x + w, y + h],\n                    [clip[0], clip[3], clip[4], clip[7]],\n                  )\n                ) {\n                  if (!contextSaved) {\n                    context.save();\n                    contextSaved = true;\n                  }\n                  context.beginPath();\n                  // counter-clockwise (outer ring) for current tile\n                  context.moveTo(currentClip[0], currentClip[1]);\n                  context.lineTo(currentClip[2], currentClip[3]);\n                  context.lineTo(currentClip[4], currentClip[5]);\n                  context.lineTo(currentClip[6], currentClip[7]);\n                  // clockwise (inner ring) for higher z tile\n                  context.moveTo(clip[6], clip[7]);\n                  context.lineTo(clip[4], clip[5]);\n                  context.lineTo(clip[2], clip[3]);\n                  context.lineTo(clip[0], clip[1]);\n                  context.clip();\n                }\n              }\n            }\n            clips.push(currentClip);\n            clipZs.push(currentZ);\n          } else {\n            context.clearRect(x, y, w, h);\n          }\n        }\n        this.drawTileImage(\n          tile,\n          frameState,\n          x,\n          y,\n          w,\n          h,\n          tileGutter,\n          transition,\n        );\n        if (clips && !inTransition) {\n          if (contextSaved) {\n            context.restore();\n          }\n          this.renderedTiles.unshift(tile);\n        } else {\n          this.renderedTiles.push(tile);\n        }\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedRevision = sourceRevision;\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n    this.renderedProjection = projection;\n\n    this.manageTilePyramid(\n      frameState,\n      tileSource,\n      tileGrid,\n      pixelRatio,\n      projection,\n      extent,\n      z,\n      tileLayer.getPreload(),\n    );\n    this.scheduleExpireCache(frameState, tileSource);\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n\n  /**\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   */\n  drawTileImage(tile, frameState, x, y, w, h, gutter, transition) {\n    const image = this.getTileImage(tile);\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @protected\n   */\n  scheduleExpireCache(frameState, tileSource) {\n    if (tileSource.canExpireCache()) {\n      /**\n       * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = function (tileSource, map, frameState) {\n        const tileSourceKey = getUid(tileSource);\n        if (tileSourceKey in frameState.usedTiles) {\n          tileSource.expireCache(\n            frameState.viewState.projection,\n            frameState.usedTiles[tileSourceKey],\n          );\n        }\n      }.bind(null, tileSource);\n\n      frameState.postRenderFunctions.push(\n        /** @type {import(\"../../Map.js\").PostRenderFunction} */ (\n          postRenderFunction\n        ),\n      );\n    }\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n\n  /**\n   * Manage tile pyramid.\n   * This function performs a number of functions related to the tiles at the\n   * current zoom and lower zoom levels:\n   * - registers idle tiles in frameState.wantedTiles so that they are not\n   *   discarded by the tile queue\n   * - enqueues missing tiles\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../proj/Projection.js\").default} projection Projection.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {number} currentZ Current Z.\n   * @param {number} preload Load low resolution tiles up to `preload` levels.\n   * @param {function(import(\"../../Tile.js\").default):void} [tileCallback] Tile callback.\n   * @protected\n   */\n  manageTilePyramid(\n    frameState,\n    tileSource,\n    tileGrid,\n    pixelRatio,\n    projection,\n    extent,\n    currentZ,\n    preload,\n    tileCallback,\n  ) {\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n    const tileQueue = frameState.tileQueue;\n    const minZoom = tileGrid.getMinZoom();\n    const rotation = frameState.viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          frameState.viewState.center,\n          frameState.viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    let tileCount = 0;\n    let tile, tileRange, tileResolution, x, y, z;\n    for (z = minZoom; z <= currentZ; ++z) {\n      tileRange = tileGrid.getTileRangeForExtentAndZ(extent, z, tileRange);\n      tileResolution = tileGrid.getResolution(z);\n      for (x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          if (currentZ - z <= preload) {\n            ++tileCount;\n            tile = tileSource.getTile(z, x, y, pixelRatio, projection);\n            if (tile.getState() == TileState.IDLE) {\n              wantedTiles[tile.getKey()] = true;\n              if (!tileQueue.isKeyQueued(tile.getKey())) {\n                tileQueue.enqueue([\n                  tile,\n                  tileSourceKey,\n                  tileGrid.getTileCoordCenter(tile.tileCoord),\n                  tileResolution,\n                ]);\n              }\n            }\n            if (tileCallback !== undefined) {\n              tileCallback(tile);\n            }\n          } else {\n            tileSource.useTile(z, x, y, projection);\n          }\n        }\n      }\n    }\n    tileSource.updateCacheSize(tileCount, projection);\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.pop();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.count_ = 0;\n    this.entries_ = {};\n    this.oldest_ = null;\n    this.newest_ = null;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return (tileCoord[1] << tileCoord[0]) + tileCoord[2];\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/TileCache\n */\nimport LRUCache from './structs/LRUCache.js';\nimport {fromKey, getKey} from './tilecoord.js';\n\nclass TileCache extends LRUCache {\n  clear() {\n    while (this.getCount() > 0) {\n      this.pop().release();\n    }\n    super.clear();\n  }\n\n  /**\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(usedTiles) {\n    while (this.canExpireCache()) {\n      const tile = this.peekLast();\n      if (tile.getKey() in usedTiles) {\n        break;\n      } else {\n        this.pop().release();\n      }\n    }\n  }\n\n  /**\n   * Prune all tiles from the cache that don't have the same z as the newest tile.\n   */\n  pruneExceptNewestZ() {\n    if (this.getCount() === 0) {\n      return;\n    }\n    const key = this.peekFirstKey();\n    const tileCoord = fromKey(key);\n    const z = tileCoord[0];\n    this.forEach((tile) => {\n      if (tile.tileCoord[0] !== z) {\n        this.remove(getKey(tile.tileCoord));\n        tile.release();\n      }\n    });\n  }\n}\n\nexport default TileCache;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * * a simple string (e.g. `'© Acme Inc.'`)\n * * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ =\n      options.attributionsCollapsible !== undefined\n        ? options.attributionsCollapsible\n        : true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (Array.isArray(attributionLike)) {\n    return function (frameState) {\n      return attributionLike;\n    };\n  }\n\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n\n  return function (frameState) {\n    return [attributionLike];\n  };\n}\n\nexport default Source;\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\nimport {assert} from '../asserts.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {toSize} from '../size.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/tilegrid\n */\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {toSize} from './size.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport Source from './Source.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport {abstract} from '../util.js';\nimport {assert} from '../asserts.js';\nimport {equivalent} from '../proj.js';\nimport {getKeyZXY, withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {scale as scaleSize, toSize} from '../size.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] CacheSize.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.opaque_ = options.opaque !== undefined ? options.opaque : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../TileCache.js\").default}\n     */\n    this.tileCache = new TileCache(options.cacheSize || 0);\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || '';\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.tileCache.canExpireCache();\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCache) {\n      tileCache.expireCache(usedTiles);\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {number} z Zoom level.\n   * @param {import(\"../TileRange.js\").default} tileRange Tile range.\n   * @param {function(import(\"../Tile.js\").default):(boolean|void)} callback Called with each\n   *     loaded tile.  If the callback returns `false`, the tile will not be\n   *     considered loaded.\n   * @return {boolean} The tile range is fully covered with loaded tiles.\n   */\n  forEachLoadedTile(projection, z, tileRange, callback) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (!tileCache) {\n      return false;\n    }\n\n    let covered = true;\n    let tile, tileCoordKey, loaded;\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        tileCoordKey = getKeyZXY(z, x, y);\n        loaded = false;\n        if (tileCache.containsKey(tileCoordKey)) {\n          tile = /** @type {!import(\"../Tile.js\").default} */ (\n            tileCache.get(tileCoordKey)\n          );\n          loaded = tile.getState() === TileState.LOADED;\n          if (loaded) {\n            loaded = callback(tile) !== false;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    return this.opaque_;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../Tile.js\").default} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   * @protected\n   */\n  getTileCacheForProjection(projection) {\n    const sourceProjection = this.getProjection();\n    assert(\n      sourceProjection === null || equivalent(sourceProjection, projection),\n      'A VectorTile source can only be rendered if it has a projection compatible with the view projection.',\n    );\n    return this.tileCache;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    projection = projection !== undefined ? projection : this.getProjection();\n    const tileGrid = this.getTileGridForProjection(projection);\n    if (this.getWrapX() && projection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, projection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached tiles from the source. The next render cycle will fetch new tiles.\n   * @api\n   */\n  clear() {\n    this.tileCache.clear();\n  }\n\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  updateCacheSize(tileCount, projection) {\n    const tileCache = this.getTileCacheForProjection(projection);\n    if (tileCount > tileCache.highWaterMark) {\n      tileCache.highWaterMark = tileCount;\n    }\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  useTile(z, x, y, projection) {}\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  const zRegEx = /\\{z\\}/g;\n  const xRegEx = /\\{x\\}/g;\n  const yRegEx = /\\{y\\}/g;\n  const dashYRegEx = /\\{-y\\}/g;\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      return template\n        .replace(zRegEx, tileCoord[0].toString())\n        .replace(xRegEx, tileCoord[1].toString())\n        .replace(yRegEx, tileCoord[2].toString())\n        .replace(dashYRegEx, function () {\n          const z = tileCoord[0];\n          const range = tileGrid.getFullTileRange(z);\n          if (!range) {\n            throw new Error(\n              'The {-y} placeholder requires a tile grid with extent',\n            );\n          }\n          const y = range.getHeight() - tileCoord[2] - 1;\n          return y.toString();\n        });\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/UrlTile\n */\nimport TileEventType from './TileEventType.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, expandUrl} from '../tileurlfunction.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Cache size.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] TileUrlFunction.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Base class for sources providing tiles divided into a tile grid over http.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileCache.clear();\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    this.tileCache.pruneExceptNewestZ();\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n\n  /**\n   * Marks a tile coord as being used, without triggering a load.\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   */\n  useTile(z, x, y) {\n    const tileCoordKey = getKeyZXY(z, x, y);\n    if (this.tileCache.containsKey(tileCoordKey)) {\n      this.tileCache.get(tileCoordKey);\n    }\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport EventType from '../events/EventType.js';\nimport ImageTile from '../ImageTile.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport TileCache from '../TileCache.js';\nimport TileState from '../TileState.js';\nimport UrlTile from './UrlTile.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport {getKey, getKeyZXY} from '../tilecoord.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get tile URL given a tile coordinate and the projection.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Base class for sources providing images divided into a tile grid.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      opaque: options.opaque,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, TileCache>}\n     */\n    this.tileCacheForProjection = {};\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    if (this.tileCache.canExpireCache()) {\n      return true;\n    }\n    for (const key in this.tileCacheForProjection) {\n      if (this.tileCacheForProjection[key].canExpireCache()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {!Object<string, boolean>} usedTiles Used tiles.\n   */\n  expireCache(projection, usedTiles) {\n    const usedTileCache = this.getTileCacheForProjection(projection);\n\n    this.tileCache.expireCache(\n      this.tileCache == usedTileCache ? usedTiles : {},\n    );\n    for (const id in this.tileCacheForProjection) {\n      const tileCache = this.tileCacheForProjection[id];\n      tileCache.expireCache(tileCache == usedTileCache ? usedTiles : {});\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {boolean} Opaque.\n   */\n  getOpaque(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return false;\n    }\n    return super.getOpaque(projection);\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../TileCache.js\").default} Tile cache.\n   */\n  getTileCacheForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (!thisProj || equivalent(thisProj, projection)) {\n      return this.tileCache;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileCacheForProjection)) {\n      this.tileCacheForProjection[projKey] = new TileCache(\n        this.tileCache.highWaterMark,\n      );\n    }\n    return this.tileCacheForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const cache = this.getTileCacheForProjection(projection);\n    const tileCoord = [z, x, y];\n    let tile;\n    const tileCoordKey = getKey(tileCoord);\n    if (cache.containsKey(tileCoordKey)) {\n      tile = cache.get(tileCoordKey);\n    }\n    const key = this.getKey();\n    if (tile && tile.key == key) {\n      return tile;\n    }\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const newTile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    newTile.key = key;\n\n    if (tile) {\n      newTile.interimTile = tile;\n      newTile.refreshInterimChain();\n      cache.replace(tileCoordKey, newTile);\n    } else {\n      cache.set(tileCoordKey, newTile);\n    }\n    return newTile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    let tile = null;\n    const tileCoordKey = getKeyZXY(z, x, y);\n    const key = this.getKey();\n    if (!this.tileCache.containsKey(tileCoordKey)) {\n      tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n      this.tileCache.set(tileCoordKey, tile);\n    } else {\n      tile = this.tileCache.get(tileCoordKey);\n      if (tile.key != key) {\n        // The source's params changed. If the tile has an interim tile and if we\n        // can use it then we use it. Otherwise we create a new tile.  In both\n        // cases we attempt to assign an interim tile to the new tile.\n        const interimTile = tile;\n        tile = this.createTile_(z, x, y, pixelRatio, projection, key);\n\n        //make the new tile the head of the list,\n        if (interimTile.getState() == TileState.IDLE) {\n          //the old tile hasn't begun loading yet, and is now outdated, so we can simply discard it\n          tile.interimTile = interimTile.interimTile;\n        } else {\n          tile.interimTile = interimTile;\n        }\n        tile.refreshInterimChain();\n        this.tileCache.replace(tileCoordKey, tile);\n      }\n    }\n    return tile;\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n\n  clear() {\n    super.clear();\n    for (const id in this.tileCacheForProjection) {\n      this.tileCacheForProjection[id].clear();\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/XYZ\n */\n\nimport TileImage from './TileImage.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {boolean} [opaque=false] Whether the layer is opaque.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Optional function to get\n * tile URL given a tile coordinate and the projection.\n * Required if `url` or `urls` are not provided.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      opaque: options.opaque,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/control/MousePosition\n */\n\nimport Control from './Control.js';\nimport EventType from '../pointer/EventType.js';\nimport {\n  get as getProjection,\n  getTransformFromProjections,\n  getUserProjection,\n  identityTransform,\n} from '../proj.js';\nimport {listen} from '../events.js';\nimport {wrapX} from '../coordinate.js';\n\n/**\n * @type {string}\n */\nconst PROJECTION = 'projection';\n\n/**\n * @type {string}\n */\nconst COORDINATE_FORMAT = 'coordinateFormat';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:coordinateFormat'|'change:projection', Return>} MousePositionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-mouse-position'] CSS class name.\n * @property {import(\"../coordinate.js\").CoordinateFormat} [coordinateFormat] Coordinate format.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the\n * control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the\n * control to be rendered outside of the map's viewport.\n * @property {string} [placeholder] Markup to show when the mouse position is not\n * available (e.g. when the pointer leaves the map viewport).  By default, a non-breaking space is rendered\n * initially and the last position is retained when the mouse leaves the viewport.\n * When a string is provided (e.g. `'no position'` or `''` for an empty string) it is used as a\n * placeholder.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the projection's antimeridian, if it\n * is a global projection.\n */\n\n/**\n * @classdesc\n * A control to show the 2D coordinates of the mouse cursor. By default, these\n * are in the view projection, but can be in any supported projection.\n * By default the control is shown in the top right corner of the map, but this\n * can be changed by using the css selector `.ol-mouse-position`.\n *\n * On touch devices, which usually do not have a mouse cursor, the coordinates\n * of the currently touched position are shown.\n *\n * @api\n */\nclass MousePosition extends Control {\n  /**\n   * @param {Options} [options] Mouse position options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const element = document.createElement('div');\n    element.className =\n      options.className !== undefined ? options.className : 'ol-mouse-position';\n\n    super({\n      element: element,\n      render: options.render,\n      target: options.target,\n    });\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MousePositionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MousePositionOnSignature<void>}\n     */\n    this.un;\n\n    this.addChangeListener(PROJECTION, this.handleProjectionChanged_);\n\n    if (options.coordinateFormat) {\n      this.setCoordinateFormat(options.coordinateFormat);\n    }\n    if (options.projection) {\n      this.setProjection(options.projection);\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderOnMouseOut_ = options.placeholder !== undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.placeholder_ = this.renderOnMouseOut_ ? options.placeholder : '&#160;';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedHTML_ = element.innerHTML;\n\n    /**\n     * @private\n     * @type {?import(\"../proj/Projection.js\").default}\n     */\n    this.mapProjection_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../proj.js\").TransformFunction}\n     */\n    this.transform_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX === false ? false : true;\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    this.transform_ = null;\n  }\n\n  /**\n   * Return the coordinate format type used to render the current position or\n   * undefined.\n   * @return {import(\"../coordinate.js\").CoordinateFormat|undefined} The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  getCoordinateFormat() {\n    return /** @type {import(\"../coordinate.js\").CoordinateFormat|undefined} */ (\n      this.get(COORDINATE_FORMAT)\n    );\n  }\n\n  /**\n   * Return the projection that is used to report the mouse position.\n   * @return {import(\"../proj/Projection.js\").default|undefined} The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return /** @type {import(\"../proj/Projection.js\").default|undefined} */ (\n      this.get(PROJECTION)\n    );\n  }\n\n  /**\n   * @param {MouseEvent} event Browser event.\n   * @protected\n   */\n  handleMouseMove(event) {\n    const map = this.getMap();\n    this.updateHTML_(map.getEventPixel(event));\n  }\n\n  /**\n   * @param {Event} event Browser event.\n   * @protected\n   */\n  handleMouseOut(event) {\n    this.updateHTML_(null);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      const viewport = map.getViewport();\n      this.listenerKeys.push(\n        listen(viewport, EventType.POINTERMOVE, this.handleMouseMove, this),\n      );\n      if (this.renderOnMouseOut_) {\n        this.listenerKeys.push(\n          listen(viewport, EventType.POINTEROUT, this.handleMouseOut, this),\n        );\n      }\n      this.updateHTML_(null);\n    }\n  }\n\n  /**\n   * Set the coordinate format type used to render the current position.\n   * @param {import(\"../coordinate.js\").CoordinateFormat} format The format to render the current\n   *     position in.\n   * @observable\n   * @api\n   */\n  setCoordinateFormat(format) {\n    this.set(COORDINATE_FORMAT, format);\n  }\n\n  /**\n   * Set the projection that is used to report the mouse position.\n   * @param {import(\"../proj.js\").ProjectionLike} projection The projection to report mouse\n   *     position in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * @param {?import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @private\n   */\n  updateHTML_(pixel) {\n    let html = this.placeholder_;\n    if (pixel && this.mapProjection_) {\n      if (!this.transform_) {\n        const projection = this.getProjection();\n        if (projection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            projection,\n          );\n        } else {\n          this.transform_ = identityTransform;\n        }\n      }\n      const map = this.getMap();\n      const coordinate = map.getCoordinateFromPixelInternal(pixel);\n      if (coordinate) {\n        const userProjection = getUserProjection();\n        if (userProjection) {\n          this.transform_ = getTransformFromProjections(\n            this.mapProjection_,\n            userProjection,\n          );\n        }\n        this.transform_(coordinate, coordinate);\n        if (this.wrapX_) {\n          const projection =\n            userProjection || this.getProjection() || this.mapProjection_;\n          wrapX(coordinate, projection);\n        }\n        const coordinateFormat = this.getCoordinateFormat();\n        if (coordinateFormat) {\n          html = coordinateFormat(coordinate);\n        } else {\n          html = coordinate.toString();\n        }\n      }\n    }\n    if (!this.renderedHTML_ || html !== this.renderedHTML_) {\n      this.element.innerHTML = html;\n      this.renderedHTML_ = html;\n    }\n  }\n\n  /**\n   * Update the projection. Rendering of the coordinates is done in\n   * `handleMouseMove` and `handleMouseUp`.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      this.mapProjection_ = null;\n    } else {\n      if (this.mapProjection_ != frameState.viewState.projection) {\n        this.mapProjection_ = frameState.viewState.projection;\n        this.transform_ = null;\n      }\n    }\n  }\n}\n\nexport default MousePosition;\n","/**\n * @module ol/Overlay\n */\nimport BaseObject from './Object.js';\nimport MapEventType from './MapEventType.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {containsExtent} from './extent.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {outerHeight, outerWidth, removeChildren, removeNode} from './dom.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      removeNode(this.element);\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = Math.round(pixel[0] + offset[0]) + 'px';\n    const y = Math.round(pixel[1] + offset[1]) + 'px';\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/control/ZoomSlider\n */\n\nimport Control from './Control.js';\nimport EventType from '../events/EventType.js';\nimport PointerEventType from '../pointer/EventType.js';\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {clamp} from '../math.js';\nimport {easeOut} from '../easing.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {stopPropagation} from '../events/Event.js';\n\n/**\n * The enum for available directions.\n *\n * @enum {number}\n */\nconst Direction = {\n  VERTICAL: 0,\n  HORIZONTAL: 1,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-zoomslider'] CSS class name.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control\n * should be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A slider type of control for zooming.\n *\n * Example:\n *\n *     map.addControl(new ZoomSlider());\n *\n * @api\n */\nclass ZoomSlider extends Control {\n  /**\n   * @param {Options} [options] Zoom slider options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      target: options.target,\n      element: document.createElement('div'),\n      render: options.render,\n    });\n\n    /**\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * Will hold the current resolution of the view.\n     *\n     * @type {number|undefined}\n     * @private\n     */\n    this.currentResolution_ = undefined;\n\n    /**\n     * The direction of the slider. Will be determined from actual display of the\n     * container and defaults to Direction.VERTICAL.\n     *\n     * @type {Direction}\n     * @private\n     */\n    this.direction_ = Direction.VERTICAL;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.heightLimit_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.widthLimit_ = 0;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startX_;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.startY_;\n\n    /**\n     * The calculated thumb size (border box plus margins).  Set when initSlider_\n     * is called.\n     * @type {import(\"../size.js\").Size}\n     * @private\n     */\n    this.thumbSize_ = null;\n\n    /**\n     * Whether the slider is initialized.\n     * @type {boolean}\n     * @private\n     */\n    this.sliderInitialized_ = false;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoomslider';\n    const thumbElement = document.createElement('button');\n    thumbElement.setAttribute('type', 'button');\n    thumbElement.className = className + '-thumb ' + CLASS_UNSELECTABLE;\n    const containerElement = this.element;\n    containerElement.className =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    containerElement.appendChild(thumbElement);\n\n    containerElement.addEventListener(\n      PointerEventType.POINTERDOWN,\n      this.handleDraggerStart_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERMOVE,\n      this.handleDraggerDrag_.bind(this),\n      false,\n    );\n    containerElement.addEventListener(\n      PointerEventType.POINTERUP,\n      this.handleDraggerEnd_.bind(this),\n      false,\n    );\n\n    containerElement.addEventListener(\n      EventType.CLICK,\n      this.handleContainerClick_.bind(this),\n      false,\n    );\n    thumbElement.addEventListener(EventType.CLICK, stopPropagation, false);\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    super.setMap(map);\n    if (map) {\n      map.render();\n    }\n  }\n\n  /**\n   * Initializes the slider element. This will determine and set this controls\n   * direction_ and also constrain the dragging of the thumb to always be within\n   * the bounds of the container.\n   *\n   * @return {boolean} Initialization successful\n   * @private\n   */\n  initSlider_() {\n    const container = this.element;\n    let containerWidth = container.offsetWidth;\n    let containerHeight = container.offsetHeight;\n    if (containerWidth === 0 && containerHeight === 0) {\n      return (this.sliderInitialized_ = false);\n    }\n\n    const containerStyle = getComputedStyle(container);\n    containerWidth -=\n      parseFloat(containerStyle['paddingRight']) +\n      parseFloat(containerStyle['paddingLeft']);\n    containerHeight -=\n      parseFloat(containerStyle['paddingTop']) +\n      parseFloat(containerStyle['paddingBottom']);\n    const thumb = /** @type {HTMLElement} */ (container.firstElementChild);\n    const thumbStyle = getComputedStyle(thumb);\n    const thumbWidth =\n      thumb.offsetWidth +\n      parseFloat(thumbStyle['marginRight']) +\n      parseFloat(thumbStyle['marginLeft']);\n    const thumbHeight =\n      thumb.offsetHeight +\n      parseFloat(thumbStyle['marginTop']) +\n      parseFloat(thumbStyle['marginBottom']);\n    this.thumbSize_ = [thumbWidth, thumbHeight];\n\n    if (containerWidth > containerHeight) {\n      this.direction_ = Direction.HORIZONTAL;\n      this.widthLimit_ = containerWidth - thumbWidth;\n    } else {\n      this.direction_ = Direction.VERTICAL;\n      this.heightLimit_ = containerHeight - thumbHeight;\n    }\n    return (this.sliderInitialized_ = true);\n  }\n\n  /**\n   * @param {PointerEvent} event The browser event to handle.\n   * @private\n   */\n  handleContainerClick_(event) {\n    const view = this.getMap().getView();\n\n    const relativePosition = this.getRelativePosition_(\n      event.offsetX - this.thumbSize_[0] / 2,\n      event.offsetY - this.thumbSize_[1] / 2,\n    );\n\n    const resolution = this.getResolutionForPosition_(relativePosition);\n    const zoom = view.getConstrainedZoom(view.getZoomForResolution(resolution));\n\n    view.animateInternal({\n      zoom: zoom,\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n\n  /**\n   * Handle dragger start events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerStart_(event) {\n    if (!this.dragging_ && event.target === this.element.firstElementChild) {\n      const element = /** @type {HTMLElement} */ (\n        this.element.firstElementChild\n      );\n      this.getMap().getView().beginInteraction();\n      this.startX_ = event.clientX - parseFloat(element.style.left);\n      this.startY_ = event.clientY - parseFloat(element.style.top);\n      this.dragging_ = true;\n\n      if (this.dragListenerKeys_.length === 0) {\n        const drag = this.handleDraggerDrag_;\n        const end = this.handleDraggerEnd_;\n        const doc = this.getMap().getOwnerDocument();\n        this.dragListenerKeys_.push(\n          listen(doc, PointerEventType.POINTERMOVE, drag, this),\n          listen(doc, PointerEventType.POINTERUP, end, this),\n        );\n      }\n    }\n  }\n\n  /**\n   * Handle dragger drag events.\n   *\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerDrag_(event) {\n    if (this.dragging_) {\n      const deltaX = event.clientX - this.startX_;\n      const deltaY = event.clientY - this.startY_;\n      const relativePosition = this.getRelativePosition_(deltaX, deltaY);\n      this.currentResolution_ =\n        this.getResolutionForPosition_(relativePosition);\n      this.getMap().getView().setResolution(this.currentResolution_);\n    }\n  }\n\n  /**\n   * Handle dragger end events.\n   * @param {PointerEvent} event The drag event.\n   * @private\n   */\n  handleDraggerEnd_(event) {\n    if (this.dragging_) {\n      const view = this.getMap().getView();\n      view.endInteraction();\n\n      this.dragging_ = false;\n      this.startX_ = undefined;\n      this.startY_ = undefined;\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n    }\n  }\n\n  /**\n   * Positions the thumb inside its container according to the given resolution.\n   *\n   * @param {number} res The res.\n   * @private\n   */\n  setThumbPosition_(res) {\n    const position = this.getPositionForResolution_(res);\n    const thumb = /** @type {HTMLElement} */ (this.element.firstElementChild);\n\n    if (this.direction_ == Direction.HORIZONTAL) {\n      thumb.style.left = this.widthLimit_ * position + 'px';\n    } else {\n      thumb.style.top = this.heightLimit_ * position + 'px';\n    }\n  }\n\n  /**\n   * Calculates the relative position of the thumb given x and y offsets.  The\n   * relative position scales from 0 to 1.  The x and y offsets are assumed to be\n   * in pixel units within the dragger limits.\n   *\n   * @param {number} x Pixel position relative to the left of the slider.\n   * @param {number} y Pixel position relative to the top of the slider.\n   * @return {number} The relative position of the thumb.\n   * @private\n   */\n  getRelativePosition_(x, y) {\n    let amount;\n    if (this.direction_ === Direction.HORIZONTAL) {\n      amount = x / this.widthLimit_;\n    } else {\n      amount = y / this.heightLimit_;\n    }\n    return clamp(amount, 0, 1);\n  }\n\n  /**\n   * Calculates the corresponding resolution of the thumb given its relative\n   * position (where 0 is the minimum and 1 is the maximum).\n   *\n   * @param {number} position The relative position of the thumb.\n   * @return {number} The corresponding resolution.\n   * @private\n   */\n  getResolutionForPosition_(position) {\n    const fn = this.getMap().getView().getResolutionForValueFunction();\n    return fn(1 - position);\n  }\n\n  /**\n   * Determines the relative position of the slider for the given resolution.  A\n   * relative position of 0 corresponds to the minimum view resolution.  A\n   * relative position of 1 corresponds to the maximum view resolution.\n   *\n   * @param {number} res The resolution.\n   * @return {number} The relative position value (between 0 and 1).\n   * @private\n   */\n  getPositionForResolution_(res) {\n    const fn = this.getMap().getView().getValueForResolutionFunction();\n    return clamp(1 - fn(res), 0, 1);\n  }\n\n  /**\n   * Update the zoomslider element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    if (!mapEvent.frameState) {\n      return;\n    }\n    if (!this.sliderInitialized_ && !this.initSlider_()) {\n      return;\n    }\n    const res = mapEvent.frameState.viewState.resolution;\n    this.currentResolution_ = res;\n    this.setThumbPosition_(res);\n  }\n}\n\nexport default ZoomSlider;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport CanvasInstruction from './Instruction.js';\nimport Relationship from '../../extent/Relationship.js';\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport {equals, reverseSubArray} from '../../array.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      this.applyPixelRatio(state.lineDash),\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      if (fillStyle !== undefined) {\n        this.instructions.push(createFill.call(this, state));\n      }\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      if (strokeStyle !== undefined) {\n        applyStroke.call(this, state);\n      }\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport {snap} from '../../geom/flat/simplify.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    if (fillStyle !== undefined) {\n      this.updateFillStyle(state, this.createFill);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.updateStrokeStyle(state, this.applyStroke);\n    }\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport {getUid} from '../../util.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      if (textState.backgroundFill || textState.backgroundStroke) {\n        this.setFillStrokeStyle(\n          textState.backgroundFill,\n          textState.backgroundStroke,\n        );\n        if (textState.backgroundFill) {\n          this.updateFillStyle(this.state, this.createFill);\n        }\n        if (textState.backgroundStroke) {\n          this.updateStrokeStyle(this.state, this.applyStroke);\n          this.hitDetectionInstructions.push(this.createStroke(this.state));\n        }\n      }\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const currentFillStyle = this.state.fillStyle;\n      if (textState.backgroundFill) {\n        this.state.fillStyle = defaultFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        !!textState.backgroundFill,\n        !!textState.backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      // Reset previous fill\n      if (textState.backgroundFill) {\n        this.state.fillStyle = currentFillStyle;\n        this.hitDetectionInstructions.push(this.createFill(this.state));\n      }\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\nimport {containsCoordinate} from '../../extent.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright\n  let reverse;\n  if (rotation) {\n    const flat = [beginX, beginY, endX, endY];\n    rotate(flat, 0, 4, 2, rotation, flat, flat);\n    reverse = flat[0] > flat[2];\n  } else {\n    reverse = beginX > endX;\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport CanvasInstruction from './Instruction.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {equals} from '../../array.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @typedef {Object} BBox\n * @property {number} minX Minimal x.\n * @property {number} minY Minimal y.\n * @property {number} maxX Maximal x.\n * @property {number} maxY Maximal y\n * @property {*} value Value.\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {BBox} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {BBox} Declutter bbox.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const textIsArray = Array.isArray(text);\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = textIsArray\n      ? text\n      : text.split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    let lastFillInstruction = null;\n    let lastStrokeInstruction = null;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFill, backgroundStroke;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFill = /** @type {boolean} */ (instruction[17]);\n            backgroundStroke = /** @type {boolean} */ (instruction[18]);\n          } else {\n            padding = defaultPadding;\n            backgroundFill = false;\n            backgroundStroke = false;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              backgroundFill || backgroundStroke,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFill\n                ? /** @type {Array<*>} */ (lastFillInstruction)\n                : null,\n              backgroundStroke\n                ? /** @type {Array<*>} */ (lastStrokeInstruction)\n                : null,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string} */ (instruction[11]);\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          lastFillInstruction = instruction;\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          lastStrokeInstruction = instruction;\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport Executor from './Executor.js';\nimport {ascending} from '../../array.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {isEmpty} from '../../obj.js';\nimport {transform2D} from '../../geom/flat/transform.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n        undefined,\n        {willReadFrequently: true},\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /**\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    let i, ii, j, jj, replays;\n    if (declutterTree) {\n      zs.reverse();\n    }\n    for (i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      replays = this.executorsByZIndex_[zIndexKey];\n      for (j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + j;\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport VectorContext from '../VectorContext.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\nimport {equals} from '../../array.js';\nimport {intersects} from '../../extent.js';\nimport {toFixed} from '../../math.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport CanvasImmediateRenderer from './Immediate.js';\nimport {Icon} from '../../style.js';\nimport {ascending} from '../../array.js';\nimport {clamp} from '../../math.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {intersects} from '../../extent.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getTolerance as getRenderTolerance,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport {equals} from '../../array.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport {getUid} from '../../util.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {function(import(\"../../Feature.js\").default, import(\"../../Feature.js\").default): number|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return null;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    let result;\n    const executorGroups = [this.replayGroup_];\n    const declutter = this.getLayer().getDeclutter();\n    executorGroups.some((executorGroup) => {\n      return (result = executorGroup.forEachFeatureAtCoordinate(\n        coordinate,\n        resolution,\n        rotation,\n        hitTolerance,\n        featureCallback,\n        declutter && frameState.declutter[declutter]\n          ? frameState.declutter[declutter].all().map((item) => item.value)\n          : null,\n      ));\n    });\n\n    return result;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\n\n/**\n * @typedef {Object} Entry\n * @property {number} minX MinX.\n * @property {number} minY MinY.\n * @property {number} maxX MaxX.\n * @property {number} maxY MaxY.\n * @property {Object} [value] Value.\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {Entry} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): *} callback Callback.\n   * @return {*} Callback return value.\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): *} callback Callback.\n   * @private\n   * @return {*} Callback return value.\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/featureloader\n */\nimport {VOID} from './functions.js';\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), an\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @typedef {function(this:(import(\"./source/Vector\").default|import(\"./VectorTile.js\").default),\n *           import(\"./extent.js\").Extent,\n *           number,\n *           import(\"./proj/Projection.js\").default,\n *           function(Array<FeatureType>): void=,\n *           function(): void=): void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<import('./format/Feature.js').FeatureToFeatureClass<FeatureType>>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   */\n  return function (extent, resolution, projection, success, failure) {\n    const source =\n      /** @type {import(\"./source/Vector\").default<FeatureType>} */ (this);\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      function (features, dataProjection) {\n        source.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      /* FIXME handle error */ failure ? failure : VOID,\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport RBush from '../structs/RBush.js';\nimport RenderFeature from '../render/Feature.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {assert} from '../asserts.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {extend} from '../array.js';\nimport {getUid} from '../util.js';\nimport {isEmpty} from '../obj.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {xhr} from '../featureloader.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureClass=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureClass} [feature] Feature.\n   * @param {Array<FeatureClass>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureClass|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureClass>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<import(\"../format/Feature.js\").FeatureToFeatureClass<FeatureType>>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<FeatureType>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined}\n     */\n    this.format_ = options.format;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if an {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else {\n          if (!Array.isArray(indexedFeature)) {\n            this.idIndex_[id] = [indexedFeature, feature];\n          } else {\n            indexedFeature.push(feature);\n          }\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type Array<FeatureType> */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        const removeAndIgnoreReturn = (feature) => {\n          this.removeFeatureInternal(feature);\n        };\n        this.featuresRtree_.forEach(removeAndIgnoreReturn);\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with an {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<import(\"../Feature.js\").default>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType} Closest feature.\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<import('../format/Feature.js').FeatureToFeatureClass<FeatureType>>|undefined} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    let obj;\n    loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        obj = object;\n        return true;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    const removedFeatures = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      const feature = features[i];\n      const removedFeature = this.removeFeatureInternal(feature);\n      if (removedFeature) {\n        removedFeatures.push(removedFeature);\n      }\n    }\n    if (removedFeatures.length > 0) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const result = this.removeFeatureInternal(feature);\n    if (result) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {FeatureType|undefined} The removed feature\n   *     (or undefined if the feature was not found).\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return feature;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} Removed the feature from the index.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    let removed = false;\n    for (const id in this.idIndex_) {\n      const indexedFeature = this.idIndex_[id];\n      if (\n        feature instanceof RenderFeature &&\n        Array.isArray(indexedFeature) &&\n        indexedFeature.includes(feature)\n      ) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n      } else if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        removed = true;\n        break;\n      }\n    }\n    return removed;\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader<FeatureType>} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n}\n\nexport default VectorSource;\n","import './styles.css';\n\nimport GeoJSON from 'ol/format/GeoJSON.js';\n\n// import { Map, View } from 'ol';\nimport Map from 'ol/Map.js';\nimport View from 'ol/View.js';\nimport TileLayer from 'ol/layer/Tile.js';\n// import { boundingExtent } from 'ol/extent';\n\nimport OSM from 'ol/source/OSM.js';\n// import OpenCycleMap from 'ol/layer/Op';\n\nimport { Attribution, MousePosition, ZoomSlider } from 'ol/control.js';\n\nimport Overlay from 'ol/Overlay.js';\nimport { fromLonLat, toLonLat } from 'ol/proj.js';\n\nimport VectorLayer from 'ol/layer/Vector.js';\nimport VectorSource from 'ol/source/Vector.js';\n\n// import { addProjection } from 'ol/proj';\n\nimport { createStringXY } from 'ol/coordinate.js';\nimport { toStringHDMS } from 'ol/coordinate.js';\n\n/* ****************************************** */\n\n/**\n * Elements that make up the popup.\n */\nconst container = document.getElementById('popup');\nconst content = document.getElementById('popup-content');\nconst closer = document.getElementById('popup-closer');\n\n/**\n * Create an overlay to anchor the popup to the map.\n */\nconst overlay = new Overlay({\n\telement: container,\n\tautoPan: {\n\t\tanimation: {\n\t\t\tduration: 250,\n\t\t},\n\t},\n});\n\n/**\n * Add a click handler to hide the popup.\n * @return {boolean} Don't follow the href.\n */\ncloser.onclick = function () {\n\toverlay.setPosition(undefined);\n\tcloser.blur();\n\treturn false;\n};\n\nconst key = 'Get your own API key at https://www.maptiler.com/cloud/';\nconst attributions =\n\t'<a href=\"https://www.maptiler.com/copyright/\" target=\"_blank\">&copy; MapTiler</a> ' +\n\t'<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">&copy; OpenStreetMap contributors</a>';\n\n// Add a boundaries layer\nvar geoJsonSource = new VectorSource({\n\turl: './NJ-Counties-Outline.json',\n\tformat: new GeoJSON({}),\n});\n\nvar geoJsonLayer = new VectorLayer({\n\ttitle: 'NJ Boundaries',\n\tsource: geoJsonSource,\n\tprojection: 'EPSG:4326',\n\tminZoom: 6,\n\tmaxZoom: 12,\n\t// minResolution: 2000,\n\t// maxResolution: 20000,\n});\n\nconst fuxDiv = new Overlay({\n\telement: document.getElementById('fux'),\n});\n\n// const latLon = [40.4454, -74.5916];\nconst lonLat = [-74.5916, 40.4454];\n\nconst map = new Map({\n\ttarget: 'map',\n\t// layers: [vectorLayer],\n\tlayers: [\n\t\tnew TileLayer({\n\t\t\tsource: new OSM(),\n\t\t\tprojection: 'EPSG:4326',\n\t\t\t// extent: bounds,\n\t\t\t// zIndex: 100,\n\t\t\tminZoom: 6,\n\t\t\tmaxZoom: 12,\n\t\t}),\n\t\tgeoJsonLayer,\n\t\t// fuxDiv,\n\t\t// vectorLayer,\n\t],\n\toverlays: [overlay],\n\t// bounds: bounds,\n\tview: new View({\n\t\tcenter: fromLonLat(lonLat), // fromLonLat([-74.5916, 40.4454]), // ([6.6339863, 46.5193823]),\n\t\tzoom: 8,\n\t\tminZoom: 6,\n\t\tmaxZoom: 12,\n\t}),\n});\n\nvar currZoom = map.getView().getZoom();\n\nmap.on('moveend', function (e) {\n\tvar newZoom = map.getView().getZoom();\n\tif (currZoom != newZoom) {\n\t\tconsole.log('zoom end, new zoom: ' + newZoom);\n\t\tcurrZoom = newZoom;\n\t}\n});\n\nmap.getView().on('change:resolution', (event) => {\n\tconsole.log('zoom changed');\n});\n\nmap.addControl(\n\tnew MousePosition({\n\t\tclassName: 'mousePosition',\n\t\tcoordinateFormat: createStringXY(4),\n\t\tprojection: 'EPSG:4326',\n\t})\n);\nmap.addControl(\n\tnew ZoomSlider({\n\t\t// className: 'zoomSlider',\n\t\tduration: 200,\n\t})\n);\n\n// var popup = new Popup();\n// map.addOverlay(popup);\n\n/**\n * Add a click handler to the map to render the popup.\n */\nmap.on('singleclick', function (evt) {\n\tconst coordinate = evt.coordinate;\n\tconst hdms = toStringHDMS(toLonLat(coordinate));\n\n\tcontent.innerHTML = '<p>You clicked here:</p><code>' + hdms + '</code>';\n\toverlay.setPosition(coordinate);\n});\n\nvar version = (function () {\n\t'use strict';\n\tvar n = '1.0.0';\n\treturn function () {\n\t\tconsole.log('version ' + n);\n\t};\n})();\n\n// sandbox below\n\n/*\n\n// map.getView().setCenter(Projection.fromLonLat([43.6415, -71.7791]));\n\n// map.setView([43.6415, -71.7791]);\n\nconst featureOverlay = new VectorLayer({\n\tsource: new VectorSource(),\n\tmap: map,\n\tstyle: {\n\t\t'stroke-color': 'rgba(255, 255, 255, 0.7)',\n\t\t'stroke-width': 20,\n\t},\n});\n\nconst vectorLayer = new VectorLayer({\n\tbackground: '#1a2b39',\n\tsource: new VectorSource({\n\t\t// url: './NJ-Counties-Outline.json',\n\t\t// url: 'https://openlayers.org/data/vector/ecoregions.json',\n\t\tformat: new GeoJSON(),\n\t\turl: './NJ-Counties-Outline.json',\n\t}),\n\tstyle: {\n\t\t'fill-color': ['string', ['get', 'COLOR'], '#eee'],\n\t},\n});\n\n// let styleUrl = 'https://{s}.tile.thunderforest.com/atlas/{z}/{x}/{y}{r}.png?apikey=95348f24c8ae4a828557306990d39f91';\n\nlet apiKey = '95348f24c8ae4a828557306990d39f91';\n\nvar l = new OSM('OpenCycleMap', [\n\t'https://a.tile.thunderforest.com/cycle/${z}/${x}/${y}.png?apikey=' + apiKey,\n\t'https://b.tile.thunderforest.com/cycle/${z}/${x}/${y}.png?apikey=' + apiKey,\n\t'https://c.tile.thunderforest.com/cycle/${z}/${x}/${y}.png?apikey=' + apiKey,\n]);\n\n\nlet boundingBox = [\n\t[38.9285, -75.5596],\n\t[41.3574, -73.8939],\n];\n\nvar bounds = new boundingExtent(boundingBox);\n// const boundingBox = [[38.9285,-75.5596],[41.3574,-73.8939]];\n// var map = new OpenLayers.Map('map', { restrictedExtent: bounds });\n\n*/\n","/**\n * @module ol/layer/Vector\n */\nimport BaseVectorLayer from './BaseVector.js';\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\n\n/**\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {import(\"../source/Vector.js\").default<FeatureType>} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature.js').FeatureLike} FeatureType\n * @extends {BaseVectorLayer<import(\"../source/Vector.js\").default<FeatureType>, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/control/defaults\n */\nimport Attribution from './Attribution.js';\nimport Collection from '../Collection.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * * {@link module:ol/control/Zoom~Zoom}\n * * {@link module:ol/control/Rotate~Rotate}\n * * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport Kinetic from '../Kinetic.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * * {@link module:ol/interaction/DragRotate~DragRotate}\n * * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * * {@link module:ol/interaction/DragPan~DragPan}\n * * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/layer/Tile\n */\nimport BaseTileLayer from './BaseTile.js';\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this);\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/source/OSM\n */\n\nimport XYZ from './XYZ.js';\n\n/**\n * The attribution containing a link to the OpenStreetMap Copyright and License\n * page.\n * @const\n * @type {string}\n * @api\n */\nexport const ATTRIBUTION =\n  '&#169; ' +\n  '<a href=\"https://www.openstreetmap.org/copyright\" target=\"_blank\">OpenStreetMap</a> ' +\n  'contributors.';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {number} [cacheSize] Initial tile cache size. Will auto-grow to hold at least the number of tiles in the viewport.\n * @property {null|string} [crossOrigin='anonymous'] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {number} [maxZoom=19] Max zoom.\n * @property {boolean} [opaque=true] Whether the layer is opaque.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [url='https://tile.openstreetmap.org/{z}/{x}/{y}.png'] URL template.\n * Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for the OpenStreetMap tile server.\n * @api\n */\nclass OSM extends XYZ {\n  /**\n   * @param {Options} [options] Open Street Map options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    let attributions;\n    if (options.attributions !== undefined) {\n      attributions = options.attributions;\n    } else {\n      attributions = [ATTRIBUTION];\n    }\n\n    const crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : 'anonymous';\n\n    const url =\n      options.url !== undefined\n        ? options.url\n        : 'https://tile.openstreetmap.org/{z}/{x}/{y}.png';\n\n    super({\n      attributions: attributions,\n      attributionsCollapsible: false,\n      cacheSize: options.cacheSize,\n      crossOrigin: crossOrigin,\n      interpolate: options.interpolate,\n      maxZoom: options.maxZoom !== undefined ? options.maxZoom : 19,\n      opaque: options.opaque !== undefined ? options.opaque : true,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileLoadFunction: options.tileLoadFunction,\n      transition: options.transition,\n      url: url,\n      wrapX: options.wrapX,\n      zDirection: options.zDirection,\n    });\n  }\n}\n\nexport default OSM;\n"],"names":["stopPropagation","evt","Event","constructor","type","this","propagationStopped","defaultPrevented","target","preventDefault","ObjectEventType","Disposable","disposed","dispose","disposeInternal","ascending","a","b","linearFindNearest","arr","direction","n","length","i","candidate","reverseSubArray","begin","end","tmp","extend","data","extension","Array","isArray","equals","arr1","arr2","len1","TRUE","FALSE","VOID","memoizeOne","fn","lastResult","lastArgs","lastThis","called","nextArgs","prototype","slice","call","arguments","arrayEquals","apply","clear","object","property","isEmpty","Target","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","push","dispatchEvent","event","isString","t","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","undefined","hasListener","Object","keys","index","indexOf","splice","EventType","listen","thisArg","once","bind","originalListener","eventsKey","listenOnce","unlistenByKey","key","Observable","EventTarget","on","onInternal","onceInternal","un","unInternal","revision_","changed","getRevision","len","e","ol_key","abstract","Error","uidCounter_","getUid","obj","ol_uid","String","ObjectEvent","oldValue","BaseObject","values","values_","setProperties","get","value","hasOwnProperty","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","assert","assertion","errorMessage","Feature","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","getSimplifiedGeometry","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","style","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","getZIndex","setId","id","name","transform","coordinate","x","y","compose","dx1","dy1","sx","sy","angle","dx2","dy2","sin","Math","cos","makeInverse","det","mat","c","d","f","matrixPrecision","Relationship","UNKNOWN","INTERSECTING","ABOVE","RIGHT","BELOW","LEFT","boundingExtent","coordinates","extent","Infinity","extendCoordinate","buffer","dest","closestSquaredDistanceXY","dx","dy","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","minX","minY","maxX","maxY","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","min","max","forEachCorner","callback","val","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","center","resolution","rotation","size","x0","y0","x1","y1","x2","y2","x3","y3","getRotatedViewport","cosRotation","sinRotation","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","floor","wrapAndSliceX","multiWorld","isFinite","METERS_PER_UNIT","radians","PI","degrees","ft","m","Projection","options","code_","code","units_","units","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","log","tan","EPSG3857Projection","point","cosh","PROJECTIONS","EPSG4326Projection","cache","transforms","add","destination","transformFn","sourceCode","destinationCode","clamp","squaredSegmentDistance","squaredDistance","toRadians","angleInDegrees","modulo","r","lerp","toFixed","decimals","factor","pow","round","ceil","padNumber","number","width","precision","numberString","decimal","join","degreesToStringHDMS","hemispheres","fractionDigits","normalizedDegrees","abs","deg","sec","hdms","charAt","coordinate1","coordinate2","rotate","cosAngle","sinAngle","worldsAway","sourceExtentWidth","DEFAULT_RADIUS","getDistance","c1","c2","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","sqrt","warn","args","console","showCoordinateWarning","disableCoordinateWarning","disable","cloneTransform","input","output","identityTransform","addProjection","addTransformFunc","projectionLike","replace","pointResolution","getter","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","forEach","createProjection","defaultCode","equivalent","projection1","projection2","equalUnits","sourceProjection","destinationProjection","transformFunc","getTransform","toUserCoordinate","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","projections2","forwardTransform","inverseTransform","transform2D","j","anchor","anchorX","anchorY","deltaX","deltaY","k","EPSG3857_PROJECTIONS","EPSG4326_PROJECTIONS","dimension","atan","exp","tmpTransform","Geometry","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","applyTransform","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","coord","getClosestPoint","NaN","intersectsCoordinate","computeExtent","isNaN","scale","simplify","tolerance","getType","intersectsExtent","translate","sourceProj","getProjection","inCoordinates","outCoordinates","pixelExtent","projectedExtent","composeTransform","SimpleGeometry","layout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","getStrideForLayout","setCoordinates","setLayout","nesting","getLayoutForStride","deflateCoordinates","deflateCoordinatesArray","coordinatess","ends","jj","deflateMultiCoordinatesArray","coordinatesss","endss","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","concat","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","map","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","squaredDx","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","tmpPoint","assignClosestArrayPoint","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","stack","last","pop","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","linearRing","twiceArea","linearRings","LinearRing","maxDelta_","maxDeltaRevision_","linearRingArea","ret","interpolatePoint","fraction","o","cumulativeLengths","haystack","needle","comparator","mid","cmp","low","high","found","lineStringCoordinateAtM","extrapolate","lo","hi","m0","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","intersectsLineString","coordinatesExtent","forEachSegment","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsLinearRing","intersectsLinearRingArray","lineStringLength","LineString","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","getCoordinateAtM","getCoordinateAt","getLength","getFlatMidpoint","MultiLineString","ends_","lineStrings","appendLineString","multiLineString","interpolate","getEnds","getLineString","getLineStrings","getFlatMidpoints","midpoints","Point","MultiPoint","appendPoint","multiPoint","getPoint","getPoints","points","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","reverseCoordinates","orientLinearRingsArray","Polygon","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","linearRingsArea","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","linearRingss","MultiPolygon","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","getEndss","getFlatInteriorPoints","linearRingssCenter","getInteriorPoints","simplifiedEndss","getPolygon","prevEnds","getPolygons","lastEnds","RenderFeature","styleFunction","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","startOrientation","prevEndIndex","orientation","midpoint","enableSimplifyTransformed","FeatureFormat","dataProjection","defaultFeatureProjection","featureClass","O","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","feature","writeFeatures","features","writeGeometry","transformGeometryWithOptions","write","transformed","equivalentProjection","fromProjection","toProjection","power","GeometryConstructor","createRenderFeature","flat","geometryType","createGeometry","JSONFeature","readFeatureFromObject","getObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","JSON","stringify","writeFeatureObject","writeFeaturesObject","writeGeometryObject","parse","readGeometryInternal","geoJSON","rightHanded","CollectionEventType","Property","CollectionEvent","element","Collection","array","unique_","unique","array_","assertUnique_","updateLength_","getArray","item","insertAt","elem","removeAt","remove","prev","setAt","except","LayerProperty","BaseLayer","background_","background","opacity","visible","zIndex","maxResolution","minResolution","minZoom","maxZoom","className_","className","state_","getBackground","getClassName","getLayerState","managed","state","layer","getOpacity","getVisible","getMaxResolution","getMinResolution","getMinZoom","getMaxZoom","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setMaxZoom","setMinZoom","setOpacity","setVisible","setZIndex","zindex","RenderEventType","ViewProperty","CENTER","RESOLUTION","ROTATION","DEFAULT_MAX_ZOOM","DEFAULT_TILE_SIZE","createExtent","onlyCenter","smooth","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","ratio","none","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","result","createMinMaxResolution","cappedMaxRes","easeIn","easeOut","inAndOut","linear","View","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","applyOptions_","resolutionConstraintInfo","resolutionConstraint","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","defaultMaxResolution","defaultMinResolution","defaultMaxZoom","minZoomLevel","cappedZoomLevel","zoomLevel","constraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","centerNone","rotationConstraint","enableRotation","constrainRotation","rotationNone","theta","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","animateInternal","animationCount","animationCallback","Date","now","series","animation","complete","duration","easing","sourceCenter","targetCenter","sourceResolution","targetResolution","getResolutionForZoom","sourceRotation","delta","targetRotation","isNoopAnimation","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","rotateCoordinate","currentResolution","w","h","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getZoomForResolution","setConstrainResolution","enabled","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","getState","reducedSize","calculateCenterOn","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","polygonFromExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotX","rotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","position","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","returnValue","setTimeout","coordinatesEqual","Layer","baseOptions","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","render","setMap","handleSourcePropertyChange_","setSource","getSource","getRenderSource","handleSourceChange_","getFeatures","pixel","Promise","resolve","getData","isVisible","view","frameState","getMapInternal","layerState","getView","layerStatesArray","getLayerGroup","find","layerExtent","inView","getAttributions","attributions","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","some","arrayLayerState","createRenderer","hasRenderer","s","l","u","p","_maxEntries","_minEntries","children","leaf","height","all","_all","search","toBBox","collides","load","insert","_build","_splitRoot","_insert","_condense","compareMinX","compareMinY","toJSON","fromJSON","_chooseSubtree","_split","_adjustParentBBoxes","_chooseSplitAxis","_chooseSplitIndex","v","M","_allDistMargin","ImageState","hasArea","toSize","ImageStyle","opacity_","rotateWithView_","rotateWithView","rotation_","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImage","pixelRatio","getHitDetectionImage","getPixelRatio","getImageState","getImageSize","getOrigin","getSize","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","ready","rgb","channel","alias","xyz","A","C","D50","D55","D65","D75","F2","F7","F11","E","whitepoint","_xyz","white","g","luv","arg","_u","_v","xn","yn","zn","vn","yr","lchuv","hr","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","whitesmoke","yellow","yellowgreen","baseHues","hsl","t1","t2","t3","MAX_CACHE_SIZE","cacheSize","withAlpha","color","rgbaToLcha","fromString","raw","Number","parsed","cstr","space","parts","alpha","toLowerCase","names","base","parseInt","exec","dims","trim","split","shift","parseFloat","endsWith","test","match","parseRgba","normalize","asArray","toString","ua","navigator","userAgent","FIREFOX","WEBKIT","MAC","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","self","IMAGE_DECODE","Image","decode","PASSIVE_EVENT_LISTENERS","passive","defineProperty","window","error","createCanvasContext2D","canvasPool","settings","canvas","document","createElement","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","outerWidth","offsetWidth","getComputedStyle","marginLeft","marginRight","outerHeight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","parentNode","replaceChild","removeNode","node","removeChild","removeChildren","lastChild","getCacheKey","src","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","update","then","createPattern","setSize","maxCacheSize","taintedTestContext","IconImage","image","imageState","hitDetectionImage_","image_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","willReadFrequently","drawImage","getImageData","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","fillRect","getSrc","HTMLImageElement","reject","catch","handleLoad","unlisten","handleError","decodeFallback","ctx","globalCompositeOperation","fillStyle","onChange","cacheKey","iconImageCache","asColorLike","iconCache","canvasPattern","patternCanvasContext","getIconImage","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","RegExp","fontRegExMatchIndex","getFontParameters","fontSpec","lineHeight","weight","variant","families","family","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","registerFont","referenceFonts","text","interval","referenceWidth","isAvailable","fontStyle","fontWeight","fontFamily","available","referenceFont","measureTextWidth","check","done","fonts","font","clearInterval","setInterval","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","innerHTML","minHeight","maxHeight","border","display","left","body","appendChild","measureAndCacheTextWidth","reduce","curr","RegularShape","canvases_","hitDetectionCanvas_","fill_","fill","origin_","points_","radius_","radius2_","radius2","angle_","stroke_","stroke","renderOptions_","loading","getFill","getRadius","getRadius2","getAngle","getStroke","setFill","createHitDetectionCanvas_","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","step","angle0","radiusC","lineTo","closePath","CircleStyle","setRadius","Fill","patternImage_","setColor","patternImage","Stroke","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometry_","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setImage","setText","defaultStyles","createDefaultStyle","Style$1","calculateScale","wantedWidth","wantedHeight","Icon","anchor_","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","Text","font_","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","numTypes","NoneType","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","specific","overlapsType","oneType","otherType","isType","expected","LiteralExpression","CallExpression","operator","newParsingContext","variables","Set","featureId","encoded","typeHint","_","parser","parsers","Ops","Get","Var","Concat","GeometryType","Any","All","Not","Resolution","Zoom","Time","Equal","NotEqual","GreaterThan","GreaterThanOrEqualTo","LessThan","LessThanOrEqualTo","Multiply","Divide","Add","Subtract","Clamp","Mod","Pow","Abs","Floor","Ceil","Round","Sin","Cos","Atan","Sqrt","Match","Between","Interpolate","Coalesce","Case","In","Color","Id","Band","Palette","ToString","createParser","withArgsCount","firstArg","parsedArgs","varName","withNoArgs","parseArgsOfType","narrowArgsType","outputType","withEvenArgs","argsCount","inputType","fallback","expectedInputType","interpolationType","interpolation","stop","operation","argCount","condition","needleType","colors","parsedColors","minArgs","maxArgs","argType","expression","gotType","expectedType","sameType","returnType","argValidators","actualType","computeGeometryType","substring","buildExpression","actual","compileExpression","colorValue","op","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","always","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","prefix","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","requireNumberArray","optionalNumber","icon","pointsName","radiusName","requireNumber","shape","evaluateRadius","circle","Circle","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","BaseVectorLayer","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","RBush","setRenderOrder","renderOrder","styleLike","MapRenderer","map_","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","getMap","scheduleExpireIconCache","postRenderFunctions","expireIconCache","RenderEvent","inversePixelTransform","CompositeMapRenderer","fontChangeListenerKey_","redrawText","element_","container","getViewport","insertBefore","firstChild","children_","renderedVisible_","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","GroupEvent","LayerGroup","layers","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","listenerKeys","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","MapEvent","MapBrowserEvent","originalEvent","dragging","activePointers","pixel_","coordinate_","getEventPixel","getCoordinateFromPixel","MapBrowserEventType","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","PointerEventType","MapBrowserEventHandler","moveTolerance","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","activePointers_","trackedTouches_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","clearTimeout","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","MapEventType","MapProperty","DROP","PriorityQueue","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isKeyQueued","isQueued","count","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","TileQueue","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","Control","pointerEvents","target_","setTarget","getOverlayContainerStopEvent","mapEvent","getElementById","Attribution","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","collectSourceAttributions_","visibleAttributions","from","getAllLayers","flatMap","getAttributionsCollapsible","setCollapsible","updateElement_","attribution","toPromise","err","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","Rotate","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","resetNorth_","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","InteractionProperty","Interaction","setActive","getActive","mapBrowserEvent","active","zoomByDelta","DoubleClickZoom","delta_","stopEvent","browserEvent","shiftKey","PointerInteraction","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","centroid","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","getTargetElement","hasAttribute","targetElement","activeElement","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","DragPan","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition_","onFocusOnly","noKinetic_","centroidFromPointers","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","DragRotate","lastAngle_","RenderBox","startPixel_","endPixel_","render_","startPixel","endPixel","px","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","DragBox","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","DragZoom","out_","out","Key","KeyboardPan","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","mapUnitsDelta","KeyboardZoom","Kinetic","decay","minVelocity","delay","decay_","minVelocity_","delay_","initialVelocity_","lastIndex","firstIndex","MouseWheelZoom","totalDelta_","lastDelta_","timeout_","timeout","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_PIXEL","DOM_DELTA_LINE","timeLeft","handleWheelZoom_","setMouseAnchor","PinchRotate","pointerOptions","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","PinchZoom","lastDistance_","lastScaleDelta_","scaleDelta","removeLayerMapProperty","setLayerMapProperty","TileProperty","BaseTileLayer","preload","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getPreload","getUseInterimTilesOnError","LayerRenderer","boundHandleImageChange_","handleImageChange_","layer_","loadedTileCallback","tiles","tileCoord","createLoadedTileFinder","tileRange","forEachLoadedTile","getLayer","handleFontsChanged","renderIfReadyAndVisible","loadImage","ZIndexContext","instructions_","context_","Proxy","pushMethodArgs_","pushFunction","draw","instructionsAtIndex","instructionAtIndex","brokenDiagonalRendering_","pixelContext","CanvasLayerRenderer","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","pixelContext_","col","row","useContainer","backgroundColor","layerClassName","firstElementChild","HTMLCanvasElement","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","save","beginPath","moveTo","clip","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","Tile","interimTile","transition_","transition","transitionStarts_","release","setState","getInterimTile","refreshInterimChain","getTileCoord","getAlpha","time","inTransition","endTransition","ImageTile","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","Triangulation","targetProj","targetExtent","maxSourceExtent","errorThreshold","destinationResolution","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","triangle","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","getTriangles","drawTestTriangle","u1","v1","u2","v2","restore","verifyBrokenDiagonalRendering","calculateSourceResolution","targetMetersPerUnit","sourceMetersPerUnit","sourceExtent","compensationFactor","ReprojTile","sourceTileGrid","targetTileGrid","wrappedTileCoord","gutter","getTileFunction","renderEdges","renderEdges_","pixelRatio_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","getTileCoordExtent","maxTargetExtent","limitedTargetExtent","sourceProjExtent","errorThresholdInPixels","triangulation_","getZForResolution","sourceRange","getTileRangeForExtentAndZ","srcX","srcY","reproject_","sources","clipExtent","getTileSize","triangulation","drawSingle","imageSmoothingEnabled","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","steps","ud","vd","renderReprojected","leftToLoad","sourceListenKey","unlistenSources_","TileRange","containsTileRange","CanvasTileLayerRenderer","tileLayer","extentChanged","renderedExtent_","renderedPixelRatio","renderedProjection","renderedRevision","renderedTiles","newTiles_","tmpExtent","tmpTileRange_","isDrawableTile","tileState","getTile","getTileGridForProjection","tilePixelRatio","getTilePixelRatio","getTileCoordForCoordAndZ","tileOrigin","tileSize","tileResolution","getGutterForProjection","viewResolution","viewCenter","tileSource","sourceRevision","zDirection","canvasExtent","tilesToDrawByZ","findLoadedTiles","tmpTileRange","viewport","tileCoordIntersectsViewport","uid","childTileRange","getTileCoordChildTileRange","covered","forEachTileCoordParentTileRange","canvasScale","getInterpolate","clips","clipZs","currentClip","zs","getOpaque","reverse","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","origin","tileGutter","tilesToDraw","tileCoordKey","xIndex","nextX","yIndex","nextY","contextSaved","drawTileImage","unshift","updateUsedTiles","usedTiles","manageTilePyramid","scheduleExpireCache","getTileImage","alphaChanged","globalAlpha","postRenderFunction","tileSourceKey","expireCache","tileCallback","wantedTiles","tileQueue","tileCount","getTileCoordCenter","useTile","updateCacheSize","LRUCache","highWaterMark","count_","entries_","oldest_","newest_","keep","containsKey","entry","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","getKeyZXY","TileCache","pruneExceptNewestZ","Source","attributions_","adaptAttributions","attributionsCollapsible_","attributionsCollapsible","wrapX_","interpolate_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","attributionLike","tmpTileCoord","TileGrid","strict","compare","every","currentVal","res","origins","origins_","tileSizes_","tileSizes","tileSize_","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","calculateTileRanges_","forEachTileCoord","tempTileRange","tempExtent","tileCoordExtent","createOrUpdateTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","createOrUpdateTileCoord","getTileCoordResolution","getFullTileRange","opt_direction","fullTileRanges","getForProjection","resolutionsFromExtent","extentFromProjection","half","TileSource","opaque_","opaque","tilePixelRatio_","tileCache","tmpSize","tileOptions","getTileCacheForProjection","setKey","getTileGrid","getTileCoordForTileUrlFunction","TileSourceEvent","createFromTemplate","template","zRegEx","xRegEx","yRegEx","dashYRegEx","range","UrlTile","generateTileUrlFunction_","tileUrlFunction","urls","setUrls","url","setUrl","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","TileEventType","setTileLoadFunction","setTileUrlFunction","startCharCode","charCodeAt","stopCharCode","charCode","fromCharCode","templates","tileUrlFunctions","createFromTemplates","TileImage","defaultTileLoadFunction","tileClass","tileCacheForProjection","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","usedTileCache","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","newTile","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","imageTile","XYZ","xyzOptions","gridOptions","PROJECTION","COORDINATE_FORMAT","Overlay","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","margin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","getBoundingClientRect","pageXOffset","pageYOffset","isRendered","getPixelFromCoordinate","mapSize","updateRenderedPosition","posX","posY","getOptions","Instruction","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","VectorContext","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","CanvasBuilder","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","instructions","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleColor","fillPatternScale","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","CanvasInstruction","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","CanvasPolygonBuilder","drawFlatCoordinatess_","numEnds","moveToLineToInstruction","setFillStrokeStyles_","myBegin","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","middle","hanging","alphabetic","ideographic","bottom","BATCH_CONSTRUCTORS","PolygonBuilder","Default","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","fillKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textRotation","BuilderGroup","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","horizontalTextAlign","align","createTextChunks","acc","line","Executor","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","textIsArray","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","dimensions","strokePadding","labelOrImage","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","lastFillInstruction","lastStrokeInstruction","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","widthIndex","F","L","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","drawChars","part","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","ExecutorGroup","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","indexes","circlePixelIndexArrayCache","maxDistanceSq","distances","pixelIndex","imageData","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","CanvasImmediateRenderer","userTransform","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","setTransform","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imagePixelRatio","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","SIMPLIFY_TOLERANCE","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","CanvasVectorLayerRenderer","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","viewHints","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","getSquaredRenderTolerance","resultFeatures","lastIndexOf","executorGroups","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","defaultRenderOrder","renderedExtent","loadExtents","wrapCoordinateX","loadExtent","wrapExtentX","CanvasBuilderGroup","getRenderTolerance","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","maxEntries","rbush_","RBush_","items_","extents","items","getAll","getInExtent","bbox","forEach_","forEachInExtent","rbush","VectorEventType","xhr","format","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","response","onerror","send","addFeatures","VectorSourceEvent","content","closer","overlay","onclick","blur","geoJsonSource","loader_","format_","url_","loader","strategy_","strategy","allStrategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeAndIgnoreReturn","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","getUrl","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removedFeatures","removedFeature","featureChangeKeys","idString","removed","setLoader","geometryName","extractGeometryName_","extractGeometryName","geoJSONFeature","geometry_name","geoJSONFeatures","featureObject","crs","objects","geoJsonLayer","optionsInternal","keyboardEventTarget","layerGroup","controls","interactions","overlays","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","zoomOptions","rotateOptions","attributionOptions","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","viewCoordinate","ownerDocument","tileCenter","handleMapBrowserEvent","rootNode","documentElement","interactionsArray","handlePostRender","lowOnFrameBudget","unobserve","ShadowRoot","host","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","renderFrame_","renderSync","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","mapId","renderTargets","nextExtent","equalsExtent","setLayerGroup","oldLayerGroup","computedStyle","borderLeftWidth","paddingLeft","paddingRight","borderRightWidth","borderTopWidth","paddingTop","paddingBottom","borderBottomWidth","getClientRects","oldSize","currZoom","handleProjectionChanged_","coordinateFormat","setCoordinateFormat","setProjection","renderOnMouseOut_","placeholder","placeholder_","renderedHTML_","mapProjection_","getCoordinateFormat","handleMouseMove","updateHTML_","handleMouseOut","html","currentResolution_","direction_","heightLimit_","widthLimit_","startX_","startY_","thumbSize_","sliderInitialized_","thumbElement","containerElement","handleDraggerStart_","handleDraggerDrag_","handleDraggerEnd_","handleContainerClick_","initSlider_","containerWidth","containerHeight","containerStyle","thumb","thumbStyle","thumbWidth","thumbHeight","relativePosition","getRelativePosition_","getResolutionForPosition_","drag","setThumbPosition_","getPositionForResolution_","amount","lonLat","lon"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,191,192,193,194,195]}